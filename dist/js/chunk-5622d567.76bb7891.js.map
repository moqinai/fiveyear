{"version":3,"sources":["webpack:///./node_modules/weixin-js-sdk/index.js","webpack:///./node_modules/core-js/modules/es6.regexp.split.js","webpack:///./node_modules/core-js/modules/es6.regexp.replace.js","webpack:///./node_modules/core-js/modules/_is-regexp.js","webpack:///./node_modules/cropperjs/dist/cropper.js"],"names":["e","n","module","exports","window","i","t","WeixinJSBridge","invoke","o","c","u","on","trigger","appId","C","verifyAppId","verifySignType","verifyTimestamp","timestamp","verifyNonceStr","nonceStr","verifySignature","signature","r","timeStamp","package","paySign","signType","a","postalCode","addressPostalCode","provinceName","proviceFirstStageName","cityName","addressCitySecondStageName","countryName","addressCountiesThirdStageName","detailInfo","addressDetailInfo","errCode","err_code","err_desc","err_detail","errMsg","err_msg","s","_complete","debug","isInnerInvoke","alert","JSON","stringify","indexOf","substring","success","cancel","fail","complete","v","replace","toLowerCase","d","length","h","console","log","l","k","w","x","V","systemType","Image","initTime","A","initEndTime","initStartTime","preVerifyTime","preVerifyEndTime","preVerifyStartTime","N","getNetworkType","networkType","version","isPreVerifyOk","clientVersion","url","src","p","Date","getTime","f","T","S","addEventListener","m","g","split","jWeixin","config","onMenuShareTimeline","onMenuShareAppMessage","onMenuShareQQ","onMenuShareWeibo","onMenuShareQZone","previewImage","getLocation","openProductSpecificView","addCard","openCard","chooseWXPay","openEnterpriseRedPacket","startSearchBeacons","stopSearchBeacons","onSearchBeacons","consumeAndShareCard","openAddress","document","I","title","y","navigator","userAgent","_","platform","match","M","P","encodeURIComponent","location","href","L","_completes","B","state","data","O","E","check","verifyJsApiList","jsApiList","_fail","push","ready","error","checkJsApi","checkResult","parse","desc","img_url","imgUrl","link","type","data_url","dataUrl","scene","updateTimelineShareData","updateAppMessageShareData","startRecord","stopRecord","onVoiceRecordEnd","playVoice","localId","pauseVoice","stopVoice","onVoicePlayEnd","uploadVoice","isShowProgressTips","downloadVoice","serverId","translateVoice","chooseImage","count","sizeType","sourceType","localIds","current","urls","uploadImage","downloadImage","getLocalImgData","shift","wx","subtype","openLocation","latitude","longitude","name","address","scale","infoUrl","hideOptionMenu","showOptionMenu","closeWindow","hideMenuItems","menuList","showMenuItems","hideAllNonBaseMenuItem","showAllNonBaseMenuItem","scanQRCode","needResult","scanType","resultStr","scan_code","scan_result","pid","productId","view_type","viewType","ext_info","extInfo","cardList","card_id","cardId","card_ext","cardExt","card_list","isSuccess","is_succ","chooseCard","app_id","location_id","shopId","sign_type","card_type","cardType","card_sign","cardSign","time_stamp","nonce_str","choose_card_info","code","consumedCardId","consumedCode","ticket","openEnterpriseChat","useridlist","userIds","chatname","groupName","launchMiniProgram","targetAppId","path","envVersion","miniProgram","navigateBack","arg","delta","navigateTo","redirectTo","switchTab","reLaunch","postMessage","getEnv","miniprogram","__wxjs_environment","b","R","target","tagName","preventDefault","stopPropagation","localData","isRegExp","__webpack_require__","anObject","speciesConstructor","advanceStringIndex","toLength","callRegExpExec","regexpExec","fails","$min","Math","min","$push","$SPLIT","LENGTH","LAST_INDEX","MAX_UINT32","SUPPORTS_Y","RegExp","defined","SPLIT","$split","maybeCallNative","internalSplit","separator","limit","string","String","this","undefined","call","lastIndex","lastLength","output","flags","ignoreCase","multiline","unicode","sticky","lastLastIndex","splitLimit","separatorCopy","source","slice","index","apply","test","splitter","regexp","res","done","value","rx","unicodeMatching","lim","q","z","toObject","toInteger","regExpExec","max","floor","SUBSTITUTION_SYMBOLS","SUBSTITUTION_SYMBOLS_NO_NAMED","maybeToString","it","REPLACE","$replace","searchValue","replaceValue","fn","functionalReplace","global","fullUnicode","results","result","matchStr","accumulatedResult","nextSourcePosition","matched","position","captures","j","namedCaptures","groups","replacerArgs","concat","replacement","getSubstitution","str","tailPos","symbols","ch","capture","charAt","isObject","cof","MATCH","factory","_typeof","obj","Symbol","iterator","constructor","prototype","_classCallCheck","instance","Constructor","TypeError","_defineProperties","props","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","Array","isArray","arr2","iter","toString","from","IS_BROWSER","WINDOW","IS_TOUCH_DEVICE","documentElement","HAS_POINTER_EVENT","NAMESPACE","ACTION_ALL","ACTION_CROP","ACTION_MOVE","ACTION_ZOOM","ACTION_EAST","ACTION_WEST","ACTION_SOUTH","ACTION_NORTH","ACTION_NORTH_EAST","ACTION_NORTH_WEST","ACTION_SOUTH_EAST","ACTION_SOUTH_WEST","CLASS_CROP","CLASS_DISABLED","CLASS_HIDDEN","CLASS_HIDE","CLASS_INVISIBLE","CLASS_MODAL","CLASS_MOVE","DATA_ACTION","DATA_PREVIEW","DRAG_MODE_CROP","DRAG_MODE_MOVE","DRAG_MODE_NONE","EVENT_CROP","EVENT_CROP_END","EVENT_CROP_MOVE","EVENT_CROP_START","EVENT_DBLCLICK","EVENT_TOUCH_START","EVENT_TOUCH_MOVE","EVENT_TOUCH_END","EVENT_POINTER_DOWN","EVENT_POINTER_MOVE","EVENT_POINTER_UP","EVENT_READY","EVENT_RESIZE","EVENT_WHEEL","EVENT_ZOOM","MIME_TYPE_JPEG","REGEXP_ACTIONS","REGEXP_DATA_URL_JPEG","REGEXP_TAG_NAME","MIN_CONTAINER_WIDTH","MIN_CONTAINER_HEIGHT","DEFAULTS","viewMode","dragMode","initialAspectRatio","NaN","aspectRatio","preview","responsive","restore","checkCrossOrigin","checkOrientation","modal","guides","center","highlight","background","autoCrop","autoCropArea","movable","rotatable","scalable","zoomable","zoomOnTouch","zoomOnWheel","wheelZoomRatio","cropBoxMovable","cropBoxResizable","toggleDragModeOnDblclick","minCanvasWidth","minCanvasHeight","minCropBoxWidth","minCropBoxHeight","minContainerWidth","minContainerHeight","cropstart","cropmove","cropend","crop","zoom","TEMPLATE","isNaN","Number","isNumber","isPositiveNumber","Infinity","isUndefined","hasOwnProperty","isPlainObject","_constructor","isFunction","toArray","forEach","callback","keys","assign","_len","arguments","args","_key","REGEXP_DECIMALS","normalizeDecimalNumber","times","round","REGEXP_SUFFIX","setStyle","element","styles","style","property","hasClass","classList","contains","className","addClass","elem","add","trim","removeClass","remove","toggleClass","added","REGEXP_CAMEL_CASE","toParamCase","getData","dataset","getAttribute","setData","setAttribute","removeData","removeAttribute","REGEXP_SPACES","onceSupported","supported","once","listener","options","get","set","removeEventListener","removeListener","handler","event","listeners","addListener","_handler","_element$listeners","_len2","_key2","dispatchEvent","Event","CustomEvent","detail","bubbles","cancelable","createEvent","initCustomEvent","getOffset","box","getBoundingClientRect","left","pageXOffset","clientLeft","top","pageYOffset","clientTop","REGEXP_ORIGINS","isCrossOriginURL","parts","protocol","hostname","port","addTimestamp","getTransforms","_ref","rotate","scaleX","scaleY","translateX","translateY","values","transform","join","WebkitTransform","msTransform","getMaxZoomRatio","pointers","pointers2","ratios","pointer","pointerId","pointer2","x1","abs","startX","y1","startY","x2","endX","y2","endY","z1","sqrt","z2","ratio","sort","getPointer","_ref2","endOnly","pageX","pageY","end","getPointersCenter","_ref3","getAdjustedSizes","_ref4","height","width","isValidWidth","isValidHeight","adjustedWidth","getRotatedSizes","_ref5","degree","arc","PI","sinArc","sin","cosArc","cos","newWidth","newHeight","getSourceCanvas","image","_ref6","_ref7","_ref8","imageAspectRatio","imageNaturalWidth","naturalWidth","imageNaturalHeight","naturalHeight","_ref6$rotate","_ref6$scaleX","_ref6$scaleY","_ref8$fillColor","fillColor","_ref8$imageSmoothingE","imageSmoothingEnabled","_ref8$imageSmoothingQ","imageSmoothingQuality","_ref8$maxWidth","maxWidth","_ref8$maxHeight","maxHeight","_ref8$minWidth","minWidth","_ref8$minHeight","minHeight","canvas","createElement","context","getContext","maxSizes","minSizes","destMaxSizes","destMinSizes","destWidth","destHeight","params","fillStyle","fillRect","save","translate","drawImage","map","param","fromCharCode","getStringFromCharCode","dataView","start","getUint8","REGEXP_DATA_URL_HEAD","dataURLToArrayBuffer","dataURL","base64","binary","atob","arrayBuffer","ArrayBuffer","uint8","Uint8Array","charCodeAt","arrayBufferToDataURL","mimeType","chunks","chunkSize","subarray","btoa","resetAndGetOrientation","orientation","DataView","littleEndian","app1Start","ifdStart","byteLength","offset","exifIDCode","tiffOffset","endianness","getUint16","firstIFDOffset","getUint32","_offset","_length","setUint16","parseOrientation","render","initContainer","initCanvas","initCropBox","renderCanvas","cropped","renderCropBox","container","cropper","containerData","offsetWidth","offsetHeight","imageData","rotated","canvasWidth","canvasHeight","canvasData","oldLeft","oldTop","limited","limitCanvas","initialImageData","initialCanvasData","sizeLimited","positionLimited","cropBoxData","_getAdjustedSizes","newCanvasLeft","newCanvasTop","minLeft","minTop","maxLeft","maxTop","changed","transformed","_getRotatedSizes","renderImage","limitCropBox","initialCropBoxData","maxCropBoxWidth","maxCropBoxHeight","face","cropBox","disabled","initPreview","crossOrigin","crossOriginUrl","viewBox","appendChild","viewBoxImage","previews","ownerDocument","querySelectorAll","querySelector","el","img","html","innerHTML","cssText","resetPreview","cropBoxWidth","cropBoxHeight","originalWidth","originalHeight","getElementsByTagName","events","bind","onCropStart","cropStart","onWheel","wheel","passive","onDblclick","dblclick","onCropMove","cropMove","onCropEnd","cropEnd","onResize","resize","unbind","handlers","getCanvasData","getCropBoxData","setCanvasData","setCropBoxData","setDragMode","dragBox","_this","wheeling","setTimeout","deltaY","wheelDelta","buttons","button","ctrlKey","action","changedTouches","touch","identifier","originalEvent","cropping","change","right","bottom","renderable","shiftKey","range","side","move","methods","reset","clear","hasSameSize","isImg","replaced","uncreate","load","enable","disable","destroy","originalUrl","offsetX","offsetY","_this$canvasData","moveTo","_originalEvent","zoomTo","pivot","oldRatio","rotateTo","_scaleX","_scaleY","rounded","getContainerData","getImageData","sized","widthChanged","heightChanged","getCroppedCanvas","HTMLCanvasElement","_this$getData","initialX","initialY","initialWidth","initialHeight","_options$imageSmoothi","srcWidth","srcHeight","dstX","dstY","dstWidth","dstHeight","sourceWidth","sourceHeight","srcX","srcY","setAspectRatio","mode","croppable","AnotherCropper","Cropper","Error","reloading","sizing","init","toDataURL","read","xhr","XMLHttpRequest","clone","onabort","onerror","ontimeout","onprogress","getResponseHeader","abort","onload","response","onloadend","open","responseType","withCredentials","send","_parseOrientation","stop","parentNode","insertBefore","nextSibling","_this2","IS_SAFARI","build","sizingImage","body","removeChild","template","getElementsByClassName","unbuild"],"mappings":"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","file":"js/chunk-5622d567.76bb7891.js","sourcesContent":["! function (e, n) {\n  module.exports = n(e)\n}(window, function (e, n) {\n  function i(n, i, t) {\n    e.WeixinJSBridge ? WeixinJSBridge.invoke(n, o(i),\n    function(e) {\n      c(n, e, t)\n    }) : u(n, t)\n  }\n  function t(n, i, t) {\n    e.WeixinJSBridge ? WeixinJSBridge.on(n,\n    function(e) {\n      t && t.trigger && t.trigger(e),\n      c(n, e, i)\n    }) : t ? u(n, t) : u(n, i)\n  }\n  function o(e) {\n    return e = e || {},\n    e.appId = C.appId,\n    e.verifyAppId = C.appId,\n    e.verifySignType = \"sha1\",\n    e.verifyTimestamp = C.timestamp + \"\",\n    e.verifyNonceStr = C.nonceStr,\n    e.verifySignature = C.signature,\n    e\n  }\n  function r(e) {\n    return {\n      timeStamp: e.timestamp + \"\",\n      nonceStr: e.nonceStr,\n      package: e.package,\n      paySign: e.paySign,\n      signType: e.signType || \"SHA1\"\n    }\n  }\n  function a(e) {\n    return e.postalCode = e.addressPostalCode,\n    delete e.addressPostalCode,\n    e.provinceName = e.proviceFirstStageName,\n    delete e.proviceFirstStageName,\n    e.cityName = e.addressCitySecondStageName,\n    delete e.addressCitySecondStageName,\n    e.countryName = e.addressCountiesThirdStageName,\n    delete e.addressCountiesThirdStageName,\n    e.detailInfo = e.addressDetailInfo,\n    delete e.addressDetailInfo,\n    e\n  }\n  function c(e, n, i) {\n    \"openEnterpriseChat\" == e && (n.errCode = n.err_code),\n    delete n.err_code,\n    delete n.err_desc,\n    delete n.err_detail;\n    var t = n.errMsg;\n    t || (t = n.err_msg, delete n.err_msg, t = s(e, t), n.errMsg = t),\n    (i = i || {})._complete && (i._complete(n), delete i._complete),\n    t = n.errMsg || \"\",\n    C.debug && !i.isInnerInvoke && alert(JSON.stringify(n));\n    var o = t.indexOf(\":\");\n    switch (t.substring(o + 1)) {\n    case \"ok\":\n      i.success && i.success(n);\n      break;\n    case \"cancel\":\n      i.cancel && i.cancel(n);\n      break;\n    default:\n      i.fail && i.fail(n)\n    }\n    i.complete && i.complete(n)\n  }\n  function s(e, n) {\n    var i = e,\n    t = v[i];\n    t && (i = t);\n    var o = \"ok\";\n    if (n) {\n      var r = n.indexOf(\":\");\n      \"confirm\" == (o = n.substring(r + 1)) && (o = \"ok\"),\n      \"failed\" == o && (o = \"fail\"),\n      -1 != o.indexOf(\"failed_\") && (o = o.substring(7)),\n      -1 != o.indexOf(\"fail_\") && (o = o.substring(5)),\n      \"access denied\" != (o = (o = o.replace(/_/g, \" \")).toLowerCase()) && \"no permission to execute\" != o || (o = \"permission denied\"),\n      \"config\" == i && \"function not exist\" == o && (o = \"ok\"),\n      \"\" == o && (o = \"fail\")\n    }\n    return n = i + \":\" + o\n  }\n  function d(e) {\n    if (e) {\n      for (var n = 0,\n      i = e.length; n < i; ++n) {\n        var t = e[n],\n        o = h[t];\n        o && (e[n] = o)\n      }\n      return e\n    }\n  }\n  function u(e, n) {\n    if (! (!C.debug || n && n.isInnerInvoke)) {\n      var i = v[e];\n      i && (e = i),\n      n && n._complete && delete n._complete,\n      console.log('\"' + e + '\",', n || \"\")\n    }\n  }\n  function l(e) {\n    if (! (k || w || C.debug || x < \"6.0.2\" || V.systemType < 0)) {\n      var n = new Image;\n      V.appId = C.appId,\n      V.initTime = A.initEndTime - A.initStartTime,\n      V.preVerifyTime = A.preVerifyEndTime - A.preVerifyStartTime,\n      N.getNetworkType({\n        isInnerInvoke: !0,\n        success: function(e) {\n          V.networkType = e.networkType;\n          var i = \"https://open.weixin.qq.com/sdk/report?v=\" + V.version + \"&o=\" + V.isPreVerifyOk + \"&s=\" + V.systemType + \"&c=\" + V.clientVersion + \"&a=\" + V.appId + \"&n=\" + V.networkType + \"&i=\" + V.initTime + \"&p=\" + V.preVerifyTime + \"&u=\" + V.url;\n          n.src = i\n        }\n      })\n    }\n  }\n  function p() {\n    return (new Date).getTime()\n  }\n  function f(n) {\n    T && (e.WeixinJSBridge ? n() : S.addEventListener && S.addEventListener(\"WeixinJSBridgeReady\", n, !1))\n  }\n  function m() {\n    N.invoke || (N.invoke = function(n, i, t) {\n      e.WeixinJSBridge && WeixinJSBridge.invoke(n, o(i), t)\n    },\n    N.on = function(n, i) {\n      e.WeixinJSBridge && WeixinJSBridge.on(n, i)\n    })\n  }\n  function g(e) {\n    if (\"string\" == typeof e && e.length > 0) {\n      var n = e.split(\"?\")[0],\n      i = e.split(\"?\")[1];\n      return n += \".html\",\n      void 0 !== i ? n + \"?\" + i: n\n    }\n  }\n  if (!e.jWeixin) {\n    var h = {\n      config: \"preVerifyJSAPI\",\n      onMenuShareTimeline: \"menu:share:timeline\",\n      onMenuShareAppMessage: \"menu:share:appmessage\",\n      onMenuShareQQ: \"menu:share:qq\",\n      onMenuShareWeibo: \"menu:share:weiboApp\",\n      onMenuShareQZone: \"menu:share:QZone\",\n      previewImage: \"imagePreview\",\n      getLocation: \"geoLocation\",\n      openProductSpecificView: \"openProductViewWithPid\",\n      addCard: \"batchAddCard\",\n      openCard: \"batchViewCard\",\n      chooseWXPay: \"getBrandWCPayRequest\",\n      openEnterpriseRedPacket: \"getRecevieBizHongBaoRequest\",\n      startSearchBeacons: \"startMonitoringBeacons\",\n      stopSearchBeacons: \"stopMonitoringBeacons\",\n      onSearchBeacons: \"onBeaconsInRange\",\n      consumeAndShareCard: \"consumedShareCard\",\n      openAddress: \"editAddress\"\n    },\n    v = function() {\n      var e = {};\n      for (var n in h) e[h[n]] = n;\n      return e\n    } (),\n    S = e.document,\n    I = S.title,\n    y = navigator.userAgent.toLowerCase(),\n    _ = navigator.platform.toLowerCase(),\n    k = !(!_.match(\"mac\") && !_.match(\"win\")),\n    w = -1 != y.indexOf(\"wxdebugger\"),\n    T = -1 != y.indexOf(\"micromessenger\"),\n    M = -1 != y.indexOf(\"android\"),\n    P = -1 != y.indexOf(\"iphone\") || -1 != y.indexOf(\"ipad\"),\n    x = function() {\n      var e = y.match(/micromessenger\\/(\\d+\\.\\d+\\.\\d+)/) || y.match(/micromessenger\\/(\\d+\\.\\d+)/);\n      return e ? e[1] : \"\"\n    } (),\n    A = {\n      initStartTime: p(),\n      initEndTime: 0,\n      preVerifyStartTime: 0,\n      preVerifyEndTime: 0\n    },\n    V = {\n      version: 1,\n      appId: \"\",\n      initTime: 0,\n      preVerifyTime: 0,\n      networkType: \"\",\n      isPreVerifyOk: 1,\n      systemType: P ? 1 : M ? 2 : -1,\n      clientVersion: x,\n      url: encodeURIComponent(location.href)\n    },\n    C = {},\n    L = {\n      _completes: []\n    },\n    B = {\n      state: 0,\n      data: {}\n    };\n    f(function() {\n      A.initEndTime = p()\n    });\n    var O = !1,\n    E = [],\n    N = {\n      config: function(e) {\n        C = e,\n        u(\"config\", e);\n        var n = !1 !== C.check;\n        f(function() {\n          if (n) i(h.config, {\n            verifyJsApiList: d(C.jsApiList)\n          },\n          function() {\n            L._complete = function(e) {\n              A.preVerifyEndTime = p(),\n              B.state = 1,\n              B.data = e\n            },\n            L.success = function(e) {\n              V.isPreVerifyOk = 0\n            },\n            L.fail = function(e) {\n              L._fail ? L._fail(e) : B.state = -1\n            };\n            var e = L._completes;\n            return e.push(function() {\n              l()\n            }),\n            L.complete = function(n) {\n              for (var i = 0,\n              t = e.length; i < t; ++i) e[i]();\n              L._completes = []\n            },\n            L\n          } ()),\n          A.preVerifyStartTime = p();\n          else {\n            B.state = 1;\n            for (var e = L._completes,\n            t = 0,\n            o = e.length; t < o; ++t) e[t]();\n            L._completes = []\n          }\n        }),\n        m()\n      },\n      ready: function(e) {\n        0 != B.state ? e() : (L._completes.push(e), !T && C.debug && e())\n      },\n      error: function(e) {\n        x < \"6.0.2\" || ( - 1 == B.state ? e(B.data) : L._fail = e)\n      },\n      checkJsApi: function(e) {\n        var n = function(e) {\n          var n = e.checkResult;\n          for (var i in n) {\n            var t = v[i];\n            t && (n[t] = n[i], delete n[i])\n          }\n          return e\n        };\n        i(\"checkJsApi\", {\n          jsApiList: d(e.jsApiList)\n        },\n        (e._complete = function(e) {\n          if (M) {\n            var i = e.checkResult;\n            i && (e.checkResult = JSON.parse(i))\n          }\n          e = n(e)\n        },\n        e))\n      },\n      onMenuShareTimeline: function(e) {\n        t(h.onMenuShareTimeline, {\n          complete: function() {\n            i(\"shareTimeline\", {\n              title: e.title || I,\n              desc: e.title || I,\n              img_url: e.imgUrl || \"\",\n              link: e.link || location.href,\n              type: e.type || \"link\",\n              data_url: e.dataUrl || \"\"\n            },\n            e)\n          }\n        },\n        e)\n      },\n      onMenuShareAppMessage: function(e) {\n        t(h.onMenuShareAppMessage, {\n          complete: function(n) {\n            \"favorite\" === n.scene ? i(\"sendAppMessage\", {\n              title: e.title || I,\n              desc: e.desc || \"\",\n              link: e.link || location.href,\n              img_url: e.imgUrl || \"\",\n              type: e.type || \"link\",\n              data_url: e.dataUrl || \"\"\n            }) : i(\"sendAppMessage\", {\n              title: e.title || I,\n              desc: e.desc || \"\",\n              link: e.link || location.href,\n              img_url: e.imgUrl || \"\",\n              type: e.type || \"link\",\n              data_url: e.dataUrl || \"\"\n            },\n            e)\n          }\n        },\n        e)\n      },\n      onMenuShareQQ: function(e) {\n        t(h.onMenuShareQQ, {\n          complete: function() {\n            i(\"shareQQ\", {\n              title: e.title || I,\n              desc: e.desc || \"\",\n              img_url: e.imgUrl || \"\",\n              link: e.link || location.href\n            },\n            e)\n          }\n        },\n        e)\n      },\n      onMenuShareWeibo: function(e) {\n        t(h.onMenuShareWeibo, {\n          complete: function() {\n            i(\"shareWeiboApp\", {\n              title: e.title || I,\n              desc: e.desc || \"\",\n              img_url: e.imgUrl || \"\",\n              link: e.link || location.href\n            },\n            e)\n          }\n        },\n        e)\n      },\n      onMenuShareQZone: function(e) {\n        t(h.onMenuShareQZone, {\n          complete: function() {\n            i(\"shareQZone\", {\n              title: e.title || I,\n              desc: e.desc || \"\",\n              img_url: e.imgUrl || \"\",\n              link: e.link || location.href\n            },\n            e)\n          }\n        },\n        e)\n      },\n      updateTimelineShareData: function(e) {\n        i(\"updateTimelineShareData\", {\n          title: e.title,\n          link: e.link,\n          imgUrl: e.imgUrl\n        },\n        e)\n      },\n      updateAppMessageShareData: function(e) {\n        i(\"updateAppMessageShareData\", {\n          title: e.title,\n          desc: e.desc,\n          link: e.link,\n          imgUrl: e.imgUrl\n        },\n        e)\n      },\n      startRecord: function(e) {\n        i(\"startRecord\", {},\n        e)\n      },\n      stopRecord: function(e) {\n        i(\"stopRecord\", {},\n        e)\n      },\n      onVoiceRecordEnd: function(e) {\n        t(\"onVoiceRecordEnd\", e)\n      },\n      playVoice: function(e) {\n        i(\"playVoice\", {\n          localId: e.localId\n        },\n        e)\n      },\n      pauseVoice: function(e) {\n        i(\"pauseVoice\", {\n          localId: e.localId\n        },\n        e)\n      },\n      stopVoice: function(e) {\n        i(\"stopVoice\", {\n          localId: e.localId\n        },\n        e)\n      },\n      onVoicePlayEnd: function(e) {\n        t(\"onVoicePlayEnd\", e)\n      },\n      uploadVoice: function(e) {\n        i(\"uploadVoice\", {\n          localId: e.localId,\n          isShowProgressTips: 0 == e.isShowProgressTips ? 0 : 1\n        },\n        e)\n      },\n      downloadVoice: function(e) {\n        i(\"downloadVoice\", {\n          serverId: e.serverId,\n          isShowProgressTips: 0 == e.isShowProgressTips ? 0 : 1\n        },\n        e)\n      },\n      translateVoice: function(e) {\n        i(\"translateVoice\", {\n          localId: e.localId,\n          isShowProgressTips: 0 == e.isShowProgressTips ? 0 : 1\n        },\n        e)\n      },\n      chooseImage: function(e) {\n        i(\"chooseImage\", {\n          scene: \"1|2\",\n          count: e.count || 9,\n          sizeType: e.sizeType || [\"original\", \"compressed\"],\n          sourceType: e.sourceType || [\"album\", \"camera\"]\n        },\n        (e._complete = function(e) {\n          if (M) {\n            var n = e.localIds;\n            try {\n              n && (e.localIds = JSON.parse(n))\n            } catch(e) {}\n          }\n        },\n        e))\n      },\n      getLocation: function(e) {},\n      previewImage: function(e) {\n        i(h.previewImage, {\n          current: e.current,\n          urls: e.urls\n        },\n        e)\n      },\n      uploadImage: function(e) {\n        i(\"uploadImage\", {\n          localId: e.localId,\n          isShowProgressTips: 0 == e.isShowProgressTips ? 0 : 1\n        },\n        e)\n      },\n      downloadImage: function(e) {\n        i(\"downloadImage\", {\n          serverId: e.serverId,\n          isShowProgressTips: 0 == e.isShowProgressTips ? 0 : 1\n        },\n        e)\n      },\n      getLocalImgData: function(e) { ! 1 === O ? (O = !0, i(\"getLocalImgData\", {\n          localId: e.localId\n        },\n        (e._complete = function(e) {\n          if (O = !1, E.length > 0) {\n            var n = E.shift();\n            wx.getLocalImgData(n)\n          }\n        },\n        e))) : E.push(e)\n      },\n      getNetworkType: function(e) {\n        var n = function(e) {\n          var n = e.errMsg;\n          e.errMsg = \"getNetworkType:ok\";\n          var i = e.subtype;\n          if (delete e.subtype, i) e.networkType = i;\n          else {\n            var t = n.indexOf(\":\"),\n            o = n.substring(t + 1);\n            switch (o) {\n            case \"wifi\":\n            case \"edge\":\n            case \"wwan\":\n              e.networkType = o;\n              break;\n            default:\n              e.errMsg = \"getNetworkType:fail\"\n            }\n          }\n          return e\n        };\n        i(\"getNetworkType\", {},\n        (e._complete = function(e) {\n          e = n(e)\n        },\n        e))\n      },\n      openLocation: function(e) {\n        i(\"openLocation\", {\n          latitude: e.latitude,\n          longitude: e.longitude,\n          name: e.name || \"\",\n          address: e.address || \"\",\n          scale: e.scale || 28,\n          infoUrl: e.infoUrl || \"\"\n        },\n        e)\n      },\n      getLocation: function(e) {\n        e = e || {},\n        i(h.getLocation, {\n          type: e.type || \"wgs84\"\n        },\n        (e._complete = function(e) {\n          delete e.type\n        },\n        e))\n      },\n      hideOptionMenu: function(e) {\n        i(\"hideOptionMenu\", {},\n        e)\n      },\n      showOptionMenu: function(e) {\n        i(\"showOptionMenu\", {},\n        e)\n      },\n      closeWindow: function(e) {\n        i(\"closeWindow\", {},\n        e = e || {})\n      },\n      hideMenuItems: function(e) {\n        i(\"hideMenuItems\", {\n          menuList: e.menuList\n        },\n        e)\n      },\n      showMenuItems: function(e) {\n        i(\"showMenuItems\", {\n          menuList: e.menuList\n        },\n        e)\n      },\n      hideAllNonBaseMenuItem: function(e) {\n        i(\"hideAllNonBaseMenuItem\", {},\n        e)\n      },\n      showAllNonBaseMenuItem: function(e) {\n        i(\"showAllNonBaseMenuItem\", {},\n        e)\n      },\n      scanQRCode: function(e) {\n        i(\"scanQRCode\", {\n          needResult: (e = e || {}).needResult || 0,\n          scanType: e.scanType || [\"qrCode\", \"barCode\"]\n        },\n        (e._complete = function(e) {\n          if (P) {\n            var n = e.resultStr;\n            if (n) {\n              var i = JSON.parse(n);\n              e.resultStr = i && i.scan_code && i.scan_code.scan_result\n            }\n          }\n        },\n        e))\n      },\n      openAddress: function(e) {\n        i(h.openAddress, {},\n        (e._complete = function(e) {\n          e = a(e)\n        },\n        e))\n      },\n      openProductSpecificView: function(e) {\n        i(h.openProductSpecificView, {\n          pid: e.productId,\n          view_type: e.viewType || 0,\n          ext_info: e.extInfo\n        },\n        e)\n      },\n      addCard: function(e) {\n        for (var n = e.cardList,\n        t = [], o = 0, r = n.length; o < r; ++o) {\n          var a = n[o],\n          c = {\n            card_id: a.cardId,\n            card_ext: a.cardExt\n          };\n          t.push(c)\n        }\n        i(h.addCard, {\n          card_list: t\n        },\n        (e._complete = function(e) {\n          var n = e.card_list;\n          if (n) {\n            for (var i = 0,\n            t = (n = JSON.parse(n)).length; i < t; ++i) {\n              var o = n[i];\n              o.cardId = o.card_id,\n              o.cardExt = o.card_ext,\n              o.isSuccess = !!o.is_succ,\n              delete o.card_id,\n              delete o.card_ext,\n              delete o.is_succ\n            }\n            e.cardList = n,\n            delete e.card_list\n          }\n        },\n        e))\n      },\n      chooseCard: function(e) {\n        i(\"chooseCard\", {\n          app_id: C.appId,\n          location_id: e.shopId || \"\",\n          sign_type: e.signType || \"SHA1\",\n          card_id: e.cardId || \"\",\n          card_type: e.cardType || \"\",\n          card_sign: e.cardSign,\n          time_stamp: e.timestamp + \"\",\n          nonce_str: e.nonceStr\n        },\n        (e._complete = function(e) {\n          e.cardList = e.choose_card_info,\n          delete e.choose_card_info\n        },\n        e))\n      },\n      openCard: function(e) {\n        for (var n = e.cardList,\n        t = [], o = 0, r = n.length; o < r; ++o) {\n          var a = n[o],\n          c = {\n            card_id: a.cardId,\n            code: a.code\n          };\n          t.push(c)\n        }\n        i(h.openCard, {\n          card_list: t\n        },\n        e)\n      },\n      consumeAndShareCard: function(e) {\n        i(h.consumeAndShareCard, {\n          consumedCardId: e.cardId,\n          consumedCode: e.code\n        },\n        e)\n      },\n      chooseWXPay: function(e) {\n        i(h.chooseWXPay, r(e), e)\n      },\n      openEnterpriseRedPacket: function(e) {\n        i(h.openEnterpriseRedPacket, r(e), e)\n      },\n      startSearchBeacons: function(e) {\n        i(h.startSearchBeacons, {\n          ticket: e.ticket\n        },\n        e)\n      },\n      stopSearchBeacons: function(e) {\n        i(h.stopSearchBeacons, {},\n        e)\n      },\n      onSearchBeacons: function(e) {\n        t(h.onSearchBeacons, e)\n      },\n      openEnterpriseChat: function(e) {\n        i(\"openEnterpriseChat\", {\n          useridlist: e.userIds,\n          chatname: e.groupName\n        },\n        e)\n      },\n      launchMiniProgram: function(e) {\n        i(\"launchMiniProgram\", {\n          targetAppId: e.targetAppId,\n          path: g(e.path),\n          envVersion: e.envVersion\n        },\n        e)\n      },\n      miniProgram: {\n        navigateBack: function(e) {\n          e = e || {},\n          f(function() {\n            i(\"invokeMiniProgramAPI\", {\n              name: \"navigateBack\",\n              arg: {\n                delta: e.delta || 1\n              }\n            },\n            e)\n          })\n        },\n        navigateTo: function(e) {\n          f(function() {\n            i(\"invokeMiniProgramAPI\", {\n              name: \"navigateTo\",\n              arg: {\n                url: e.url\n              }\n            },\n            e)\n          })\n        },\n        redirectTo: function(e) {\n          f(function() {\n            i(\"invokeMiniProgramAPI\", {\n              name: \"redirectTo\",\n              arg: {\n                url: e.url\n              }\n            },\n            e)\n          })\n        },\n        switchTab: function(e) {\n          f(function() {\n            i(\"invokeMiniProgramAPI\", {\n              name: \"switchTab\",\n              arg: {\n                url: e.url\n              }\n            },\n            e)\n          })\n        },\n        reLaunch: function(e) {\n          f(function() {\n            i(\"invokeMiniProgramAPI\", {\n              name: \"reLaunch\",\n              arg: {\n                url: e.url\n              }\n            },\n            e)\n          })\n        },\n        postMessage: function(e) {\n          f(function() {\n            i(\"invokeMiniProgramAPI\", {\n              name: \"postMessage\",\n              arg: e.data || {}\n            },\n            e)\n          })\n        },\n        getEnv: function(n) {\n          f(function() {\n            n({\n              miniprogram: \"miniprogram\" === e.__wxjs_environment\n            })\n          })\n        }\n      }\n    },\n    b = 1,\n    R = {};\n    return S.addEventListener(\"error\",\n    function(e) {\n      if (!M) {\n        var n = e.target,\n        i = n.tagName,\n        t = n.src;\n        if ((\"IMG\" == i || \"VIDEO\" == i || \"AUDIO\" == i || \"SOURCE\" == i) && -1 != t.indexOf(\"wxlocalresource://\")) {\n          e.preventDefault(),\n          e.stopPropagation();\n          var o = n[\"wx-id\"];\n          if (o || (o = b++, n[\"wx-id\"] = o), R[o]) return;\n          R[o] = !0,\n          wx.ready(function() {\n            wx.getLocalImgData({\n              localId: t,\n              success: function(e) {\n                n.src = e.localData\n              }\n            })\n          })\n        }\n      }\n    },\n    !0),\n    S.addEventListener(\"load\",\n    function(e) {\n      if (!M) {\n        var n = e.target,\n        i = n.tagName;\n        n.src;\n        if (\"IMG\" == i || \"VIDEO\" == i || \"AUDIO\" == i || \"SOURCE\" == i) {\n          var t = n[\"wx-id\"];\n          t && (R[t] = !1)\n        }\n      }\n    },\n    !0),\n    n && (e.wx = e.jWeixin = N),\n    N\n  }\n});","'use strict';\n\nvar isRegExp = require('./_is-regexp');\nvar anObject = require('./_an-object');\nvar speciesConstructor = require('./_species-constructor');\nvar advanceStringIndex = require('./_advance-string-index');\nvar toLength = require('./_to-length');\nvar callRegExpExec = require('./_regexp-exec-abstract');\nvar regexpExec = require('./_regexp-exec');\nvar fails = require('./_fails');\nvar $min = Math.min;\nvar $push = [].push;\nvar $SPLIT = 'split';\nvar LENGTH = 'length';\nvar LAST_INDEX = 'lastIndex';\nvar MAX_UINT32 = 0xffffffff;\n\n// babel-minify transpiles RegExp('x', 'y') -> /x/y and it causes SyntaxError\nvar SUPPORTS_Y = !fails(function () { RegExp(MAX_UINT32, 'y'); });\n\n// @@split logic\nrequire('./_fix-re-wks')('split', 2, function (defined, SPLIT, $split, maybeCallNative) {\n  var internalSplit;\n  if (\n    'abbc'[$SPLIT](/(b)*/)[1] == 'c' ||\n    'test'[$SPLIT](/(?:)/, -1)[LENGTH] != 4 ||\n    'ab'[$SPLIT](/(?:ab)*/)[LENGTH] != 2 ||\n    '.'[$SPLIT](/(.?)(.?)/)[LENGTH] != 4 ||\n    '.'[$SPLIT](/()()/)[LENGTH] > 1 ||\n    ''[$SPLIT](/.?/)[LENGTH]\n  ) {\n    // based on es5-shim implementation, need to rework it\n    internalSplit = function (separator, limit) {\n      var string = String(this);\n      if (separator === undefined && limit === 0) return [];\n      // If `separator` is not a regex, use native split\n      if (!isRegExp(separator)) return $split.call(string, separator, limit);\n      var output = [];\n      var flags = (separator.ignoreCase ? 'i' : '') +\n                  (separator.multiline ? 'm' : '') +\n                  (separator.unicode ? 'u' : '') +\n                  (separator.sticky ? 'y' : '');\n      var lastLastIndex = 0;\n      var splitLimit = limit === undefined ? MAX_UINT32 : limit >>> 0;\n      // Make `global` and avoid `lastIndex` issues by working with a copy\n      var separatorCopy = new RegExp(separator.source, flags + 'g');\n      var match, lastIndex, lastLength;\n      while (match = regexpExec.call(separatorCopy, string)) {\n        lastIndex = separatorCopy[LAST_INDEX];\n        if (lastIndex > lastLastIndex) {\n          output.push(string.slice(lastLastIndex, match.index));\n          if (match[LENGTH] > 1 && match.index < string[LENGTH]) $push.apply(output, match.slice(1));\n          lastLength = match[0][LENGTH];\n          lastLastIndex = lastIndex;\n          if (output[LENGTH] >= splitLimit) break;\n        }\n        if (separatorCopy[LAST_INDEX] === match.index) separatorCopy[LAST_INDEX]++; // Avoid an infinite loop\n      }\n      if (lastLastIndex === string[LENGTH]) {\n        if (lastLength || !separatorCopy.test('')) output.push('');\n      } else output.push(string.slice(lastLastIndex));\n      return output[LENGTH] > splitLimit ? output.slice(0, splitLimit) : output;\n    };\n  // Chakra, V8\n  } else if ('0'[$SPLIT](undefined, 0)[LENGTH]) {\n    internalSplit = function (separator, limit) {\n      return separator === undefined && limit === 0 ? [] : $split.call(this, separator, limit);\n    };\n  } else {\n    internalSplit = $split;\n  }\n\n  return [\n    // `String.prototype.split` method\n    // https://tc39.github.io/ecma262/#sec-string.prototype.split\n    function split(separator, limit) {\n      var O = defined(this);\n      var splitter = separator == undefined ? undefined : separator[SPLIT];\n      return splitter !== undefined\n        ? splitter.call(separator, O, limit)\n        : internalSplit.call(String(O), separator, limit);\n    },\n    // `RegExp.prototype[@@split]` method\n    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@split\n    //\n    // NOTE: This cannot be properly polyfilled in engines that don't support\n    // the 'y' flag.\n    function (regexp, limit) {\n      var res = maybeCallNative(internalSplit, regexp, this, limit, internalSplit !== $split);\n      if (res.done) return res.value;\n\n      var rx = anObject(regexp);\n      var S = String(this);\n      var C = speciesConstructor(rx, RegExp);\n\n      var unicodeMatching = rx.unicode;\n      var flags = (rx.ignoreCase ? 'i' : '') +\n                  (rx.multiline ? 'm' : '') +\n                  (rx.unicode ? 'u' : '') +\n                  (SUPPORTS_Y ? 'y' : 'g');\n\n      // ^(? + rx + ) is needed, in combination with some S slicing, to\n      // simulate the 'y' flag.\n      var splitter = new C(SUPPORTS_Y ? rx : '^(?:' + rx.source + ')', flags);\n      var lim = limit === undefined ? MAX_UINT32 : limit >>> 0;\n      if (lim === 0) return [];\n      if (S.length === 0) return callRegExpExec(splitter, S) === null ? [S] : [];\n      var p = 0;\n      var q = 0;\n      var A = [];\n      while (q < S.length) {\n        splitter.lastIndex = SUPPORTS_Y ? q : 0;\n        var z = callRegExpExec(splitter, SUPPORTS_Y ? S : S.slice(q));\n        var e;\n        if (\n          z === null ||\n          (e = $min(toLength(splitter.lastIndex + (SUPPORTS_Y ? 0 : q)), S.length)) === p\n        ) {\n          q = advanceStringIndex(S, q, unicodeMatching);\n        } else {\n          A.push(S.slice(p, q));\n          if (A.length === lim) return A;\n          for (var i = 1; i <= z.length - 1; i++) {\n            A.push(z[i]);\n            if (A.length === lim) return A;\n          }\n          q = p = e;\n        }\n      }\n      A.push(S.slice(p));\n      return A;\n    }\n  ];\n});\n","'use strict';\n\nvar anObject = require('./_an-object');\nvar toObject = require('./_to-object');\nvar toLength = require('./_to-length');\nvar toInteger = require('./_to-integer');\nvar advanceStringIndex = require('./_advance-string-index');\nvar regExpExec = require('./_regexp-exec-abstract');\nvar max = Math.max;\nvar min = Math.min;\nvar floor = Math.floor;\nvar SUBSTITUTION_SYMBOLS = /\\$([$&`']|\\d\\d?|<[^>]*>)/g;\nvar SUBSTITUTION_SYMBOLS_NO_NAMED = /\\$([$&`']|\\d\\d?)/g;\n\nvar maybeToString = function (it) {\n  return it === undefined ? it : String(it);\n};\n\n// @@replace logic\nrequire('./_fix-re-wks')('replace', 2, function (defined, REPLACE, $replace, maybeCallNative) {\n  return [\n    // `String.prototype.replace` method\n    // https://tc39.github.io/ecma262/#sec-string.prototype.replace\n    function replace(searchValue, replaceValue) {\n      var O = defined(this);\n      var fn = searchValue == undefined ? undefined : searchValue[REPLACE];\n      return fn !== undefined\n        ? fn.call(searchValue, O, replaceValue)\n        : $replace.call(String(O), searchValue, replaceValue);\n    },\n    // `RegExp.prototype[@@replace]` method\n    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@replace\n    function (regexp, replaceValue) {\n      var res = maybeCallNative($replace, regexp, this, replaceValue);\n      if (res.done) return res.value;\n\n      var rx = anObject(regexp);\n      var S = String(this);\n      var functionalReplace = typeof replaceValue === 'function';\n      if (!functionalReplace) replaceValue = String(replaceValue);\n      var global = rx.global;\n      if (global) {\n        var fullUnicode = rx.unicode;\n        rx.lastIndex = 0;\n      }\n      var results = [];\n      while (true) {\n        var result = regExpExec(rx, S);\n        if (result === null) break;\n        results.push(result);\n        if (!global) break;\n        var matchStr = String(result[0]);\n        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);\n      }\n      var accumulatedResult = '';\n      var nextSourcePosition = 0;\n      for (var i = 0; i < results.length; i++) {\n        result = results[i];\n        var matched = String(result[0]);\n        var position = max(min(toInteger(result.index), S.length), 0);\n        var captures = [];\n        // NOTE: This is equivalent to\n        //   captures = result.slice(1).map(maybeToString)\n        // but for some reason `nativeSlice.call(result, 1, result.length)` (called in\n        // the slice polyfill when slicing native arrays) \"doesn't work\" in safari 9 and\n        // causes a crash (https://pastebin.com/N21QzeQA) when trying to debug it.\n        for (var j = 1; j < result.length; j++) captures.push(maybeToString(result[j]));\n        var namedCaptures = result.groups;\n        if (functionalReplace) {\n          var replacerArgs = [matched].concat(captures, position, S);\n          if (namedCaptures !== undefined) replacerArgs.push(namedCaptures);\n          var replacement = String(replaceValue.apply(undefined, replacerArgs));\n        } else {\n          replacement = getSubstitution(matched, S, position, captures, namedCaptures, replaceValue);\n        }\n        if (position >= nextSourcePosition) {\n          accumulatedResult += S.slice(nextSourcePosition, position) + replacement;\n          nextSourcePosition = position + matched.length;\n        }\n      }\n      return accumulatedResult + S.slice(nextSourcePosition);\n    }\n  ];\n\n    // https://tc39.github.io/ecma262/#sec-getsubstitution\n  function getSubstitution(matched, str, position, captures, namedCaptures, replacement) {\n    var tailPos = position + matched.length;\n    var m = captures.length;\n    var symbols = SUBSTITUTION_SYMBOLS_NO_NAMED;\n    if (namedCaptures !== undefined) {\n      namedCaptures = toObject(namedCaptures);\n      symbols = SUBSTITUTION_SYMBOLS;\n    }\n    return $replace.call(replacement, symbols, function (match, ch) {\n      var capture;\n      switch (ch.charAt(0)) {\n        case '$': return '$';\n        case '&': return matched;\n        case '`': return str.slice(0, position);\n        case \"'\": return str.slice(tailPos);\n        case '<':\n          capture = namedCaptures[ch.slice(1, -1)];\n          break;\n        default: // \\d\\d?\n          var n = +ch;\n          if (n === 0) return match;\n          if (n > m) {\n            var f = floor(n / 10);\n            if (f === 0) return match;\n            if (f <= m) return captures[f - 1] === undefined ? ch.charAt(1) : captures[f - 1] + ch.charAt(1);\n            return match;\n          }\n          capture = captures[n - 1];\n      }\n      return capture === undefined ? '' : capture;\n    });\n  }\n});\n","// 7.2.8 IsRegExp(argument)\nvar isObject = require('./_is-object');\nvar cof = require('./_cof');\nvar MATCH = require('./_wks')('match');\nmodule.exports = function (it) {\n  var isRegExp;\n  return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : cof(it) == 'RegExp');\n};\n","/*!\n * Cropper.js v1.5.1\n * https://fengyuanchen.github.io/cropperjs\n *\n * Copyright 2015-present Chen Fengyuan\n * Released under the MIT license\n *\n * Date: 2019-03-10T09:55:53.729Z\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = global || self, global.Cropper = factory());\n}(this, function () { 'use strict';\n\n  function _typeof(obj) {\n    if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n      _typeof = function (obj) {\n        return typeof obj;\n      };\n    } else {\n      _typeof = function (obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n      };\n    }\n\n    return _typeof(obj);\n  }\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n  }\n\n  function _toConsumableArray(arr) {\n    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n  }\n\n  function _arrayWithoutHoles(arr) {\n    if (Array.isArray(arr)) {\n      for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n\n      return arr2;\n    }\n  }\n\n  function _iterableToArray(iter) {\n    if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n  }\n\n  function _nonIterableSpread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n  }\n\n  var IS_BROWSER = typeof window !== 'undefined';\n  var WINDOW = IS_BROWSER ? window : {};\n  var IS_TOUCH_DEVICE = IS_BROWSER ? 'ontouchstart' in WINDOW.document.documentElement : false;\n  var HAS_POINTER_EVENT = IS_BROWSER ? 'PointerEvent' in WINDOW : false;\n  var NAMESPACE = 'cropper'; // Actions\n\n  var ACTION_ALL = 'all';\n  var ACTION_CROP = 'crop';\n  var ACTION_MOVE = 'move';\n  var ACTION_ZOOM = 'zoom';\n  var ACTION_EAST = 'e';\n  var ACTION_WEST = 'w';\n  var ACTION_SOUTH = 's';\n  var ACTION_NORTH = 'n';\n  var ACTION_NORTH_EAST = 'ne';\n  var ACTION_NORTH_WEST = 'nw';\n  var ACTION_SOUTH_EAST = 'se';\n  var ACTION_SOUTH_WEST = 'sw'; // Classes\n\n  var CLASS_CROP = \"\".concat(NAMESPACE, \"-crop\");\n  var CLASS_DISABLED = \"\".concat(NAMESPACE, \"-disabled\");\n  var CLASS_HIDDEN = \"\".concat(NAMESPACE, \"-hidden\");\n  var CLASS_HIDE = \"\".concat(NAMESPACE, \"-hide\");\n  var CLASS_INVISIBLE = \"\".concat(NAMESPACE, \"-invisible\");\n  var CLASS_MODAL = \"\".concat(NAMESPACE, \"-modal\");\n  var CLASS_MOVE = \"\".concat(NAMESPACE, \"-move\"); // Data keys\n\n  var DATA_ACTION = \"\".concat(NAMESPACE, \"Action\");\n  var DATA_PREVIEW = \"\".concat(NAMESPACE, \"Preview\"); // Drag modes\n\n  var DRAG_MODE_CROP = 'crop';\n  var DRAG_MODE_MOVE = 'move';\n  var DRAG_MODE_NONE = 'none'; // Events\n\n  var EVENT_CROP = 'crop';\n  var EVENT_CROP_END = 'cropend';\n  var EVENT_CROP_MOVE = 'cropmove';\n  var EVENT_CROP_START = 'cropstart';\n  var EVENT_DBLCLICK = 'dblclick';\n  var EVENT_TOUCH_START = IS_TOUCH_DEVICE ? 'touchstart' : 'mousedown';\n  var EVENT_TOUCH_MOVE = IS_TOUCH_DEVICE ? 'touchmove' : 'mousemove';\n  var EVENT_TOUCH_END = IS_TOUCH_DEVICE ? 'touchend touchcancel' : 'mouseup';\n  var EVENT_POINTER_DOWN = HAS_POINTER_EVENT ? 'pointerdown' : EVENT_TOUCH_START;\n  var EVENT_POINTER_MOVE = HAS_POINTER_EVENT ? 'pointermove' : EVENT_TOUCH_MOVE;\n  var EVENT_POINTER_UP = HAS_POINTER_EVENT ? 'pointerup pointercancel' : EVENT_TOUCH_END;\n  var EVENT_READY = 'ready';\n  var EVENT_RESIZE = 'resize';\n  var EVENT_WHEEL = 'wheel';\n  var EVENT_ZOOM = 'zoom'; // Mime types\n\n  var MIME_TYPE_JPEG = 'image/jpeg'; // RegExps\n\n  var REGEXP_ACTIONS = /^e|w|s|n|se|sw|ne|nw|all|crop|move|zoom$/;\n  var REGEXP_DATA_URL_JPEG = /^data:image\\/jpeg;base64,/;\n  var REGEXP_TAG_NAME = /^img|canvas$/i; // Misc\n  // Inspired by the default width and height of a canvas element.\n\n  var MIN_CONTAINER_WIDTH = 200;\n  var MIN_CONTAINER_HEIGHT = 100;\n\n  var DEFAULTS = {\n    // Define the view mode of the cropper\n    viewMode: 0,\n    // 0, 1, 2, 3\n    // Define the dragging mode of the cropper\n    dragMode: DRAG_MODE_CROP,\n    // 'crop', 'move' or 'none'\n    // Define the initial aspect ratio of the crop box\n    initialAspectRatio: NaN,\n    // Define the aspect ratio of the crop box\n    aspectRatio: NaN,\n    // An object with the previous cropping result data\n    data: null,\n    // A selector for adding extra containers to preview\n    preview: '',\n    // Re-render the cropper when resize the window\n    responsive: true,\n    // Restore the cropped area after resize the window\n    restore: true,\n    // Check if the current image is a cross-origin image\n    checkCrossOrigin: true,\n    // Check the current image's Exif Orientation information\n    checkOrientation: true,\n    // Show the black modal\n    modal: true,\n    // Show the dashed lines for guiding\n    guides: true,\n    // Show the center indicator for guiding\n    center: true,\n    // Show the white modal to highlight the crop box\n    highlight: true,\n    // Show the grid background\n    background: true,\n    // Enable to crop the image automatically when initialize\n    autoCrop: true,\n    // Define the percentage of automatic cropping area when initializes\n    autoCropArea: 0.8,\n    // Enable to move the image\n    movable: true,\n    // Enable to rotate the image\n    rotatable: true,\n    // Enable to scale the image\n    scalable: true,\n    // Enable to zoom the image\n    zoomable: true,\n    // Enable to zoom the image by dragging touch\n    zoomOnTouch: true,\n    // Enable to zoom the image by wheeling mouse\n    zoomOnWheel: true,\n    // Define zoom ratio when zoom the image by wheeling mouse\n    wheelZoomRatio: 0.1,\n    // Enable to move the crop box\n    cropBoxMovable: true,\n    // Enable to resize the crop box\n    cropBoxResizable: true,\n    // Toggle drag mode between \"crop\" and \"move\" when click twice on the cropper\n    toggleDragModeOnDblclick: true,\n    // Size limitation\n    minCanvasWidth: 0,\n    minCanvasHeight: 0,\n    minCropBoxWidth: 0,\n    minCropBoxHeight: 0,\n    minContainerWidth: 200,\n    minContainerHeight: 100,\n    // Shortcuts of events\n    ready: null,\n    cropstart: null,\n    cropmove: null,\n    cropend: null,\n    crop: null,\n    zoom: null\n  };\n\n  var TEMPLATE = '<div class=\"cropper-container\" touch-action=\"none\">' + '<div class=\"cropper-wrap-box\">' + '<div class=\"cropper-canvas\"></div>' + '</div>' + '<div class=\"cropper-drag-box\"></div>' + '<div class=\"cropper-crop-box\">' + '<span class=\"cropper-view-box\"></span>' + '<span class=\"cropper-dashed dashed-h\"></span>' + '<span class=\"cropper-dashed dashed-v\"></span>' + '<span class=\"cropper-center\"></span>' + '<span class=\"cropper-face\"></span>' + '<span class=\"cropper-line line-e\" data-cropper-action=\"e\"></span>' + '<span class=\"cropper-line line-n\" data-cropper-action=\"n\"></span>' + '<span class=\"cropper-line line-w\" data-cropper-action=\"w\"></span>' + '<span class=\"cropper-line line-s\" data-cropper-action=\"s\"></span>' + '<span class=\"cropper-point point-e\" data-cropper-action=\"e\"></span>' + '<span class=\"cropper-point point-n\" data-cropper-action=\"n\"></span>' + '<span class=\"cropper-point point-w\" data-cropper-action=\"w\"></span>' + '<span class=\"cropper-point point-s\" data-cropper-action=\"s\"></span>' + '<span class=\"cropper-point point-ne\" data-cropper-action=\"ne\"></span>' + '<span class=\"cropper-point point-nw\" data-cropper-action=\"nw\"></span>' + '<span class=\"cropper-point point-sw\" data-cropper-action=\"sw\"></span>' + '<span class=\"cropper-point point-se\" data-cropper-action=\"se\"></span>' + '</div>' + '</div>';\n\n  /**\n   * Check if the given value is not a number.\n   */\n\n  var isNaN = Number.isNaN || WINDOW.isNaN;\n  /**\n   * Check if the given value is a number.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is a number, else `false`.\n   */\n\n  function isNumber(value) {\n    return typeof value === 'number' && !isNaN(value);\n  }\n  /**\n   * Check if the given value is a positive number.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is a positive number, else `false`.\n   */\n\n  var isPositiveNumber = function isPositiveNumber(value) {\n    return value > 0 && value < Infinity;\n  };\n  /**\n   * Check if the given value is undefined.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is undefined, else `false`.\n   */\n\n  function isUndefined(value) {\n    return typeof value === 'undefined';\n  }\n  /**\n   * Check if the given value is an object.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is an object, else `false`.\n   */\n\n  function isObject(value) {\n    return _typeof(value) === 'object' && value !== null;\n  }\n  var hasOwnProperty = Object.prototype.hasOwnProperty;\n  /**\n   * Check if the given value is a plain object.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is a plain object, else `false`.\n   */\n\n  function isPlainObject(value) {\n    if (!isObject(value)) {\n      return false;\n    }\n\n    try {\n      var _constructor = value.constructor;\n      var prototype = _constructor.prototype;\n      return _constructor && prototype && hasOwnProperty.call(prototype, 'isPrototypeOf');\n    } catch (error) {\n      return false;\n    }\n  }\n  /**\n   * Check if the given value is a function.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is a function, else `false`.\n   */\n\n  function isFunction(value) {\n    return typeof value === 'function';\n  }\n  var slice = Array.prototype.slice;\n  /**\n   * Convert array-like or iterable object to an array.\n   * @param {*} value - The value to convert.\n   * @returns {Array} Returns a new array.\n   */\n\n  function toArray(value) {\n    return Array.from ? Array.from(value) : slice.call(value);\n  }\n  /**\n   * Iterate the given data.\n   * @param {*} data - The data to iterate.\n   * @param {Function} callback - The process function for each element.\n   * @returns {*} The original data.\n   */\n\n  function forEach(data, callback) {\n    if (data && isFunction(callback)) {\n      if (Array.isArray(data) || isNumber(data.length)\n      /* array-like */\n      ) {\n          toArray(data).forEach(function (value, key) {\n            callback.call(data, value, key, data);\n          });\n        } else if (isObject(data)) {\n        Object.keys(data).forEach(function (key) {\n          callback.call(data, data[key], key, data);\n        });\n      }\n    }\n\n    return data;\n  }\n  /**\n   * Extend the given object.\n   * @param {*} target - The target object to extend.\n   * @param {*} args - The rest objects for merging to the target object.\n   * @returns {Object} The extended object.\n   */\n\n  var assign = Object.assign || function assign(target) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    if (isObject(target) && args.length > 0) {\n      args.forEach(function (arg) {\n        if (isObject(arg)) {\n          Object.keys(arg).forEach(function (key) {\n            target[key] = arg[key];\n          });\n        }\n      });\n    }\n\n    return target;\n  };\n  var REGEXP_DECIMALS = /\\.\\d*(?:0|9){12}\\d*$/;\n  /**\n   * Normalize decimal number.\n   * Check out {@link http://0.30000000000000004.com/}\n   * @param {number} value - The value to normalize.\n   * @param {number} [times=100000000000] - The times for normalizing.\n   * @returns {number} Returns the normalized number.\n   */\n\n  function normalizeDecimalNumber(value) {\n    var times = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100000000000;\n    return REGEXP_DECIMALS.test(value) ? Math.round(value * times) / times : value;\n  }\n  var REGEXP_SUFFIX = /^width|height|left|top|marginLeft|marginTop$/;\n  /**\n   * Apply styles to the given element.\n   * @param {Element} element - The target element.\n   * @param {Object} styles - The styles for applying.\n   */\n\n  function setStyle(element, styles) {\n    var style = element.style;\n    forEach(styles, function (value, property) {\n      if (REGEXP_SUFFIX.test(property) && isNumber(value)) {\n        value = \"\".concat(value, \"px\");\n      }\n\n      style[property] = value;\n    });\n  }\n  /**\n   * Check if the given element has a special class.\n   * @param {Element} element - The element to check.\n   * @param {string} value - The class to search.\n   * @returns {boolean} Returns `true` if the special class was found.\n   */\n\n  function hasClass(element, value) {\n    return element.classList ? element.classList.contains(value) : element.className.indexOf(value) > -1;\n  }\n  /**\n   * Add classes to the given element.\n   * @param {Element} element - The target element.\n   * @param {string} value - The classes to be added.\n   */\n\n  function addClass(element, value) {\n    if (!value) {\n      return;\n    }\n\n    if (isNumber(element.length)) {\n      forEach(element, function (elem) {\n        addClass(elem, value);\n      });\n      return;\n    }\n\n    if (element.classList) {\n      element.classList.add(value);\n      return;\n    }\n\n    var className = element.className.trim();\n\n    if (!className) {\n      element.className = value;\n    } else if (className.indexOf(value) < 0) {\n      element.className = \"\".concat(className, \" \").concat(value);\n    }\n  }\n  /**\n   * Remove classes from the given element.\n   * @param {Element} element - The target element.\n   * @param {string} value - The classes to be removed.\n   */\n\n  function removeClass(element, value) {\n    if (!value) {\n      return;\n    }\n\n    if (isNumber(element.length)) {\n      forEach(element, function (elem) {\n        removeClass(elem, value);\n      });\n      return;\n    }\n\n    if (element.classList) {\n      element.classList.remove(value);\n      return;\n    }\n\n    if (element.className.indexOf(value) >= 0) {\n      element.className = element.className.replace(value, '');\n    }\n  }\n  /**\n   * Add or remove classes from the given element.\n   * @param {Element} element - The target element.\n   * @param {string} value - The classes to be toggled.\n   * @param {boolean} added - Add only.\n   */\n\n  function toggleClass(element, value, added) {\n    if (!value) {\n      return;\n    }\n\n    if (isNumber(element.length)) {\n      forEach(element, function (elem) {\n        toggleClass(elem, value, added);\n      });\n      return;\n    } // IE10-11 doesn't support the second parameter of `classList.toggle`\n\n\n    if (added) {\n      addClass(element, value);\n    } else {\n      removeClass(element, value);\n    }\n  }\n  var REGEXP_CAMEL_CASE = /([a-z\\d])([A-Z])/g;\n  /**\n   * Transform the given string from camelCase to kebab-case\n   * @param {string} value - The value to transform.\n   * @returns {string} The transformed value.\n   */\n\n  function toParamCase(value) {\n    return value.replace(REGEXP_CAMEL_CASE, '$1-$2').toLowerCase();\n  }\n  /**\n   * Get data from the given element.\n   * @param {Element} element - The target element.\n   * @param {string} name - The data key to get.\n   * @returns {string} The data value.\n   */\n\n  function getData(element, name) {\n    if (isObject(element[name])) {\n      return element[name];\n    }\n\n    if (element.dataset) {\n      return element.dataset[name];\n    }\n\n    return element.getAttribute(\"data-\".concat(toParamCase(name)));\n  }\n  /**\n   * Set data to the given element.\n   * @param {Element} element - The target element.\n   * @param {string} name - The data key to set.\n   * @param {string} data - The data value.\n   */\n\n  function setData(element, name, data) {\n    if (isObject(data)) {\n      element[name] = data;\n    } else if (element.dataset) {\n      element.dataset[name] = data;\n    } else {\n      element.setAttribute(\"data-\".concat(toParamCase(name)), data);\n    }\n  }\n  /**\n   * Remove data from the given element.\n   * @param {Element} element - The target element.\n   * @param {string} name - The data key to remove.\n   */\n\n  function removeData(element, name) {\n    if (isObject(element[name])) {\n      try {\n        delete element[name];\n      } catch (error) {\n        element[name] = undefined;\n      }\n    } else if (element.dataset) {\n      // #128 Safari not allows to delete dataset property\n      try {\n        delete element.dataset[name];\n      } catch (error) {\n        element.dataset[name] = undefined;\n      }\n    } else {\n      element.removeAttribute(\"data-\".concat(toParamCase(name)));\n    }\n  }\n  var REGEXP_SPACES = /\\s\\s*/;\n\n  var onceSupported = function () {\n    var supported = false;\n\n    if (IS_BROWSER) {\n      var once = false;\n\n      var listener = function listener() {};\n\n      var options = Object.defineProperty({}, 'once', {\n        get: function get() {\n          supported = true;\n          return once;\n        },\n\n        /**\n         * This setter can fix a `TypeError` in strict mode\n         * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Errors/Getter_only}\n         * @param {boolean} value - The value to set\n         */\n        set: function set(value) {\n          once = value;\n        }\n      });\n      WINDOW.addEventListener('test', listener, options);\n      WINDOW.removeEventListener('test', listener, options);\n    }\n\n    return supported;\n  }();\n  /**\n   * Remove event listener from the target element.\n   * @param {Element} element - The event target.\n   * @param {string} type - The event type(s).\n   * @param {Function} listener - The event listener.\n   * @param {Object} options - The event options.\n   */\n\n\n  function removeListener(element, type, listener) {\n    var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    var handler = listener;\n    type.trim().split(REGEXP_SPACES).forEach(function (event) {\n      if (!onceSupported) {\n        var listeners = element.listeners;\n\n        if (listeners && listeners[event] && listeners[event][listener]) {\n          handler = listeners[event][listener];\n          delete listeners[event][listener];\n\n          if (Object.keys(listeners[event]).length === 0) {\n            delete listeners[event];\n          }\n\n          if (Object.keys(listeners).length === 0) {\n            delete element.listeners;\n          }\n        }\n      }\n\n      element.removeEventListener(event, handler, options);\n    });\n  }\n  /**\n   * Add event listener to the target element.\n   * @param {Element} element - The event target.\n   * @param {string} type - The event type(s).\n   * @param {Function} listener - The event listener.\n   * @param {Object} options - The event options.\n   */\n\n  function addListener(element, type, listener) {\n    var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    var _handler = listener;\n    type.trim().split(REGEXP_SPACES).forEach(function (event) {\n      if (options.once && !onceSupported) {\n        var _element$listeners = element.listeners,\n            listeners = _element$listeners === void 0 ? {} : _element$listeners;\n\n        _handler = function handler() {\n          delete listeners[event][listener];\n          element.removeEventListener(event, _handler, options);\n\n          for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n            args[_key2] = arguments[_key2];\n          }\n\n          listener.apply(element, args);\n        };\n\n        if (!listeners[event]) {\n          listeners[event] = {};\n        }\n\n        if (listeners[event][listener]) {\n          element.removeEventListener(event, listeners[event][listener], options);\n        }\n\n        listeners[event][listener] = _handler;\n        element.listeners = listeners;\n      }\n\n      element.addEventListener(event, _handler, options);\n    });\n  }\n  /**\n   * Dispatch event on the target element.\n   * @param {Element} element - The event target.\n   * @param {string} type - The event type(s).\n   * @param {Object} data - The additional event data.\n   * @returns {boolean} Indicate if the event is default prevented or not.\n   */\n\n  function dispatchEvent(element, type, data) {\n    var event; // Event and CustomEvent on IE9-11 are global objects, not constructors\n\n    if (isFunction(Event) && isFunction(CustomEvent)) {\n      event = new CustomEvent(type, {\n        detail: data,\n        bubbles: true,\n        cancelable: true\n      });\n    } else {\n      event = document.createEvent('CustomEvent');\n      event.initCustomEvent(type, true, true, data);\n    }\n\n    return element.dispatchEvent(event);\n  }\n  /**\n   * Get the offset base on the document.\n   * @param {Element} element - The target element.\n   * @returns {Object} The offset data.\n   */\n\n  function getOffset(element) {\n    var box = element.getBoundingClientRect();\n    return {\n      left: box.left + (window.pageXOffset - document.documentElement.clientLeft),\n      top: box.top + (window.pageYOffset - document.documentElement.clientTop)\n    };\n  }\n  var location = WINDOW.location;\n  var REGEXP_ORIGINS = /^(\\w+:)\\/\\/([^:/?#]*):?(\\d*)/i;\n  /**\n   * Check if the given URL is a cross origin URL.\n   * @param {string} url - The target URL.\n   * @returns {boolean} Returns `true` if the given URL is a cross origin URL, else `false`.\n   */\n\n  function isCrossOriginURL(url) {\n    var parts = url.match(REGEXP_ORIGINS);\n    return parts !== null && (parts[1] !== location.protocol || parts[2] !== location.hostname || parts[3] !== location.port);\n  }\n  /**\n   * Add timestamp to the given URL.\n   * @param {string} url - The target URL.\n   * @returns {string} The result URL.\n   */\n\n  function addTimestamp(url) {\n    var timestamp = \"timestamp=\".concat(new Date().getTime());\n    return url + (url.indexOf('?') === -1 ? '?' : '&') + timestamp;\n  }\n  /**\n   * Get transforms base on the given object.\n   * @param {Object} obj - The target object.\n   * @returns {string} A string contains transform values.\n   */\n\n  function getTransforms(_ref) {\n    var rotate = _ref.rotate,\n        scaleX = _ref.scaleX,\n        scaleY = _ref.scaleY,\n        translateX = _ref.translateX,\n        translateY = _ref.translateY;\n    var values = [];\n\n    if (isNumber(translateX) && translateX !== 0) {\n      values.push(\"translateX(\".concat(translateX, \"px)\"));\n    }\n\n    if (isNumber(translateY) && translateY !== 0) {\n      values.push(\"translateY(\".concat(translateY, \"px)\"));\n    } // Rotate should come first before scale to match orientation transform\n\n\n    if (isNumber(rotate) && rotate !== 0) {\n      values.push(\"rotate(\".concat(rotate, \"deg)\"));\n    }\n\n    if (isNumber(scaleX) && scaleX !== 1) {\n      values.push(\"scaleX(\".concat(scaleX, \")\"));\n    }\n\n    if (isNumber(scaleY) && scaleY !== 1) {\n      values.push(\"scaleY(\".concat(scaleY, \")\"));\n    }\n\n    var transform = values.length ? values.join(' ') : 'none';\n    return {\n      WebkitTransform: transform,\n      msTransform: transform,\n      transform: transform\n    };\n  }\n  /**\n   * Get the max ratio of a group of pointers.\n   * @param {string} pointers - The target pointers.\n   * @returns {number} The result ratio.\n   */\n\n  function getMaxZoomRatio(pointers) {\n    var pointers2 = assign({}, pointers);\n    var ratios = [];\n    forEach(pointers, function (pointer, pointerId) {\n      delete pointers2[pointerId];\n      forEach(pointers2, function (pointer2) {\n        var x1 = Math.abs(pointer.startX - pointer2.startX);\n        var y1 = Math.abs(pointer.startY - pointer2.startY);\n        var x2 = Math.abs(pointer.endX - pointer2.endX);\n        var y2 = Math.abs(pointer.endY - pointer2.endY);\n        var z1 = Math.sqrt(x1 * x1 + y1 * y1);\n        var z2 = Math.sqrt(x2 * x2 + y2 * y2);\n        var ratio = (z2 - z1) / z1;\n        ratios.push(ratio);\n      });\n    });\n    ratios.sort(function (a, b) {\n      return Math.abs(a) < Math.abs(b);\n    });\n    return ratios[0];\n  }\n  /**\n   * Get a pointer from an event object.\n   * @param {Object} event - The target event object.\n   * @param {boolean} endOnly - Indicates if only returns the end point coordinate or not.\n   * @returns {Object} The result pointer contains start and/or end point coordinates.\n   */\n\n  function getPointer(_ref2, endOnly) {\n    var pageX = _ref2.pageX,\n        pageY = _ref2.pageY;\n    var end = {\n      endX: pageX,\n      endY: pageY\n    };\n    return endOnly ? end : assign({\n      startX: pageX,\n      startY: pageY\n    }, end);\n  }\n  /**\n   * Get the center point coordinate of a group of pointers.\n   * @param {Object} pointers - The target pointers.\n   * @returns {Object} The center point coordinate.\n   */\n\n  function getPointersCenter(pointers) {\n    var pageX = 0;\n    var pageY = 0;\n    var count = 0;\n    forEach(pointers, function (_ref3) {\n      var startX = _ref3.startX,\n          startY = _ref3.startY;\n      pageX += startX;\n      pageY += startY;\n      count += 1;\n    });\n    pageX /= count;\n    pageY /= count;\n    return {\n      pageX: pageX,\n      pageY: pageY\n    };\n  }\n  /**\n   * Get the max sizes in a rectangle under the given aspect ratio.\n   * @param {Object} data - The original sizes.\n   * @param {string} [type='contain'] - The adjust type.\n   * @returns {Object} The result sizes.\n   */\n\n  function getAdjustedSizes(_ref4) // or 'cover'\n  {\n    var aspectRatio = _ref4.aspectRatio,\n        height = _ref4.height,\n        width = _ref4.width;\n    var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'contain';\n    var isValidWidth = isPositiveNumber(width);\n    var isValidHeight = isPositiveNumber(height);\n\n    if (isValidWidth && isValidHeight) {\n      var adjustedWidth = height * aspectRatio;\n\n      if (type === 'contain' && adjustedWidth > width || type === 'cover' && adjustedWidth < width) {\n        height = width / aspectRatio;\n      } else {\n        width = height * aspectRatio;\n      }\n    } else if (isValidWidth) {\n      height = width / aspectRatio;\n    } else if (isValidHeight) {\n      width = height * aspectRatio;\n    }\n\n    return {\n      width: width,\n      height: height\n    };\n  }\n  /**\n   * Get the new sizes of a rectangle after rotated.\n   * @param {Object} data - The original sizes.\n   * @returns {Object} The result sizes.\n   */\n\n  function getRotatedSizes(_ref5) {\n    var width = _ref5.width,\n        height = _ref5.height,\n        degree = _ref5.degree;\n    degree = Math.abs(degree) % 180;\n\n    if (degree === 90) {\n      return {\n        width: height,\n        height: width\n      };\n    }\n\n    var arc = degree % 90 * Math.PI / 180;\n    var sinArc = Math.sin(arc);\n    var cosArc = Math.cos(arc);\n    var newWidth = width * cosArc + height * sinArc;\n    var newHeight = width * sinArc + height * cosArc;\n    return degree > 90 ? {\n      width: newHeight,\n      height: newWidth\n    } : {\n      width: newWidth,\n      height: newHeight\n    };\n  }\n  /**\n   * Get a canvas which drew the given image.\n   * @param {HTMLImageElement} image - The image for drawing.\n   * @param {Object} imageData - The image data.\n   * @param {Object} canvasData - The canvas data.\n   * @param {Object} options - The options.\n   * @returns {HTMLCanvasElement} The result canvas.\n   */\n\n  function getSourceCanvas(image, _ref6, _ref7, _ref8) {\n    var imageAspectRatio = _ref6.aspectRatio,\n        imageNaturalWidth = _ref6.naturalWidth,\n        imageNaturalHeight = _ref6.naturalHeight,\n        _ref6$rotate = _ref6.rotate,\n        rotate = _ref6$rotate === void 0 ? 0 : _ref6$rotate,\n        _ref6$scaleX = _ref6.scaleX,\n        scaleX = _ref6$scaleX === void 0 ? 1 : _ref6$scaleX,\n        _ref6$scaleY = _ref6.scaleY,\n        scaleY = _ref6$scaleY === void 0 ? 1 : _ref6$scaleY;\n    var aspectRatio = _ref7.aspectRatio,\n        naturalWidth = _ref7.naturalWidth,\n        naturalHeight = _ref7.naturalHeight;\n    var _ref8$fillColor = _ref8.fillColor,\n        fillColor = _ref8$fillColor === void 0 ? 'transparent' : _ref8$fillColor,\n        _ref8$imageSmoothingE = _ref8.imageSmoothingEnabled,\n        imageSmoothingEnabled = _ref8$imageSmoothingE === void 0 ? true : _ref8$imageSmoothingE,\n        _ref8$imageSmoothingQ = _ref8.imageSmoothingQuality,\n        imageSmoothingQuality = _ref8$imageSmoothingQ === void 0 ? 'low' : _ref8$imageSmoothingQ,\n        _ref8$maxWidth = _ref8.maxWidth,\n        maxWidth = _ref8$maxWidth === void 0 ? Infinity : _ref8$maxWidth,\n        _ref8$maxHeight = _ref8.maxHeight,\n        maxHeight = _ref8$maxHeight === void 0 ? Infinity : _ref8$maxHeight,\n        _ref8$minWidth = _ref8.minWidth,\n        minWidth = _ref8$minWidth === void 0 ? 0 : _ref8$minWidth,\n        _ref8$minHeight = _ref8.minHeight,\n        minHeight = _ref8$minHeight === void 0 ? 0 : _ref8$minHeight;\n    var canvas = document.createElement('canvas');\n    var context = canvas.getContext('2d');\n    var maxSizes = getAdjustedSizes({\n      aspectRatio: aspectRatio,\n      width: maxWidth,\n      height: maxHeight\n    });\n    var minSizes = getAdjustedSizes({\n      aspectRatio: aspectRatio,\n      width: minWidth,\n      height: minHeight\n    }, 'cover');\n    var width = Math.min(maxSizes.width, Math.max(minSizes.width, naturalWidth));\n    var height = Math.min(maxSizes.height, Math.max(minSizes.height, naturalHeight)); // Note: should always use image's natural sizes for drawing as\n    // imageData.naturalWidth === canvasData.naturalHeight when rotate % 180 === 90\n\n    var destMaxSizes = getAdjustedSizes({\n      aspectRatio: imageAspectRatio,\n      width: maxWidth,\n      height: maxHeight\n    });\n    var destMinSizes = getAdjustedSizes({\n      aspectRatio: imageAspectRatio,\n      width: minWidth,\n      height: minHeight\n    }, 'cover');\n    var destWidth = Math.min(destMaxSizes.width, Math.max(destMinSizes.width, imageNaturalWidth));\n    var destHeight = Math.min(destMaxSizes.height, Math.max(destMinSizes.height, imageNaturalHeight));\n    var params = [-destWidth / 2, -destHeight / 2, destWidth, destHeight];\n    canvas.width = normalizeDecimalNumber(width);\n    canvas.height = normalizeDecimalNumber(height);\n    context.fillStyle = fillColor;\n    context.fillRect(0, 0, width, height);\n    context.save();\n    context.translate(width / 2, height / 2);\n    context.rotate(rotate * Math.PI / 180);\n    context.scale(scaleX, scaleY);\n    context.imageSmoothingEnabled = imageSmoothingEnabled;\n    context.imageSmoothingQuality = imageSmoothingQuality;\n    context.drawImage.apply(context, [image].concat(_toConsumableArray(params.map(function (param) {\n      return Math.floor(normalizeDecimalNumber(param));\n    }))));\n    context.restore();\n    return canvas;\n  }\n  var fromCharCode = String.fromCharCode;\n  /**\n   * Get string from char code in data view.\n   * @param {DataView} dataView - The data view for read.\n   * @param {number} start - The start index.\n   * @param {number} length - The read length.\n   * @returns {string} The read result.\n   */\n\n  function getStringFromCharCode(dataView, start, length) {\n    var str = '';\n    length += start;\n\n    for (var i = start; i < length; i += 1) {\n      str += fromCharCode(dataView.getUint8(i));\n    }\n\n    return str;\n  }\n  var REGEXP_DATA_URL_HEAD = /^data:.*,/;\n  /**\n   * Transform Data URL to array buffer.\n   * @param {string} dataURL - The Data URL to transform.\n   * @returns {ArrayBuffer} The result array buffer.\n   */\n\n  function dataURLToArrayBuffer(dataURL) {\n    var base64 = dataURL.replace(REGEXP_DATA_URL_HEAD, '');\n    var binary = atob(base64);\n    var arrayBuffer = new ArrayBuffer(binary.length);\n    var uint8 = new Uint8Array(arrayBuffer);\n    forEach(uint8, function (value, i) {\n      uint8[i] = binary.charCodeAt(i);\n    });\n    return arrayBuffer;\n  }\n  /**\n   * Transform array buffer to Data URL.\n   * @param {ArrayBuffer} arrayBuffer - The array buffer to transform.\n   * @param {string} mimeType - The mime type of the Data URL.\n   * @returns {string} The result Data URL.\n   */\n\n  function arrayBufferToDataURL(arrayBuffer, mimeType) {\n    var chunks = []; // Chunk Typed Array for better performance (#435)\n\n    var chunkSize = 8192;\n    var uint8 = new Uint8Array(arrayBuffer);\n\n    while (uint8.length > 0) {\n      // XXX: Babel's `toConsumableArray` helper will throw error in IE or Safari 9\n      // eslint-disable-next-line prefer-spread\n      chunks.push(fromCharCode.apply(null, toArray(uint8.subarray(0, chunkSize))));\n      uint8 = uint8.subarray(chunkSize);\n    }\n\n    return \"data:\".concat(mimeType, \";base64,\").concat(btoa(chunks.join('')));\n  }\n  /**\n   * Get orientation value from given array buffer.\n   * @param {ArrayBuffer} arrayBuffer - The array buffer to read.\n   * @returns {number} The read orientation value.\n   */\n\n  function resetAndGetOrientation(arrayBuffer) {\n    var dataView = new DataView(arrayBuffer);\n    var orientation; // Ignores range error when the image does not have correct Exif information\n\n    try {\n      var littleEndian;\n      var app1Start;\n      var ifdStart; // Only handle JPEG image (start by 0xFFD8)\n\n      if (dataView.getUint8(0) === 0xFF && dataView.getUint8(1) === 0xD8) {\n        var length = dataView.byteLength;\n        var offset = 2;\n\n        while (offset + 1 < length) {\n          if (dataView.getUint8(offset) === 0xFF && dataView.getUint8(offset + 1) === 0xE1) {\n            app1Start = offset;\n            break;\n          }\n\n          offset += 1;\n        }\n      }\n\n      if (app1Start) {\n        var exifIDCode = app1Start + 4;\n        var tiffOffset = app1Start + 10;\n\n        if (getStringFromCharCode(dataView, exifIDCode, 4) === 'Exif') {\n          var endianness = dataView.getUint16(tiffOffset);\n          littleEndian = endianness === 0x4949;\n\n          if (littleEndian || endianness === 0x4D4D\n          /* bigEndian */\n          ) {\n              if (dataView.getUint16(tiffOffset + 2, littleEndian) === 0x002A) {\n                var firstIFDOffset = dataView.getUint32(tiffOffset + 4, littleEndian);\n\n                if (firstIFDOffset >= 0x00000008) {\n                  ifdStart = tiffOffset + firstIFDOffset;\n                }\n              }\n            }\n        }\n      }\n\n      if (ifdStart) {\n        var _length = dataView.getUint16(ifdStart, littleEndian);\n\n        var _offset;\n\n        var i;\n\n        for (i = 0; i < _length; i += 1) {\n          _offset = ifdStart + i * 12 + 2;\n\n          if (dataView.getUint16(_offset, littleEndian) === 0x0112\n          /* Orientation */\n          ) {\n              // 8 is the offset of the current tag's value\n              _offset += 8; // Get the original orientation value\n\n              orientation = dataView.getUint16(_offset, littleEndian); // Override the orientation with its default value\n\n              dataView.setUint16(_offset, 1, littleEndian);\n              break;\n            }\n        }\n      }\n    } catch (error) {\n      orientation = 1;\n    }\n\n    return orientation;\n  }\n  /**\n   * Parse Exif Orientation value.\n   * @param {number} orientation - The orientation to parse.\n   * @returns {Object} The parsed result.\n   */\n\n  function parseOrientation(orientation) {\n    var rotate = 0;\n    var scaleX = 1;\n    var scaleY = 1;\n\n    switch (orientation) {\n      // Flip horizontal\n      case 2:\n        scaleX = -1;\n        break;\n      // Rotate left 180°\n\n      case 3:\n        rotate = -180;\n        break;\n      // Flip vertical\n\n      case 4:\n        scaleY = -1;\n        break;\n      // Flip vertical and rotate right 90°\n\n      case 5:\n        rotate = 90;\n        scaleY = -1;\n        break;\n      // Rotate right 90°\n\n      case 6:\n        rotate = 90;\n        break;\n      // Flip horizontal and rotate right 90°\n\n      case 7:\n        rotate = 90;\n        scaleX = -1;\n        break;\n      // Rotate left 90°\n\n      case 8:\n        rotate = -90;\n        break;\n\n      default:\n    }\n\n    return {\n      rotate: rotate,\n      scaleX: scaleX,\n      scaleY: scaleY\n    };\n  }\n\n  var render = {\n    render: function render() {\n      this.initContainer();\n      this.initCanvas();\n      this.initCropBox();\n      this.renderCanvas();\n\n      if (this.cropped) {\n        this.renderCropBox();\n      }\n    },\n    initContainer: function initContainer() {\n      var element = this.element,\n          options = this.options,\n          container = this.container,\n          cropper = this.cropper;\n      addClass(cropper, CLASS_HIDDEN);\n      removeClass(element, CLASS_HIDDEN);\n      var containerData = {\n        width: Math.max(container.offsetWidth, Number(options.minContainerWidth) || 200),\n        height: Math.max(container.offsetHeight, Number(options.minContainerHeight) || 100)\n      };\n      this.containerData = containerData;\n      setStyle(cropper, {\n        width: containerData.width,\n        height: containerData.height\n      });\n      addClass(element, CLASS_HIDDEN);\n      removeClass(cropper, CLASS_HIDDEN);\n    },\n    // Canvas (image wrapper)\n    initCanvas: function initCanvas() {\n      var containerData = this.containerData,\n          imageData = this.imageData;\n      var viewMode = this.options.viewMode;\n      var rotated = Math.abs(imageData.rotate) % 180 === 90;\n      var naturalWidth = rotated ? imageData.naturalHeight : imageData.naturalWidth;\n      var naturalHeight = rotated ? imageData.naturalWidth : imageData.naturalHeight;\n      var aspectRatio = naturalWidth / naturalHeight;\n      var canvasWidth = containerData.width;\n      var canvasHeight = containerData.height;\n\n      if (containerData.height * aspectRatio > containerData.width) {\n        if (viewMode === 3) {\n          canvasWidth = containerData.height * aspectRatio;\n        } else {\n          canvasHeight = containerData.width / aspectRatio;\n        }\n      } else if (viewMode === 3) {\n        canvasHeight = containerData.width / aspectRatio;\n      } else {\n        canvasWidth = containerData.height * aspectRatio;\n      }\n\n      var canvasData = {\n        aspectRatio: aspectRatio,\n        naturalWidth: naturalWidth,\n        naturalHeight: naturalHeight,\n        width: canvasWidth,\n        height: canvasHeight\n      };\n      canvasData.left = (containerData.width - canvasWidth) / 2;\n      canvasData.top = (containerData.height - canvasHeight) / 2;\n      canvasData.oldLeft = canvasData.left;\n      canvasData.oldTop = canvasData.top;\n      this.canvasData = canvasData;\n      this.limited = viewMode === 1 || viewMode === 2;\n      this.limitCanvas(true, true);\n      this.initialImageData = assign({}, imageData);\n      this.initialCanvasData = assign({}, canvasData);\n    },\n    limitCanvas: function limitCanvas(sizeLimited, positionLimited) {\n      var options = this.options,\n          containerData = this.containerData,\n          canvasData = this.canvasData,\n          cropBoxData = this.cropBoxData;\n      var viewMode = options.viewMode;\n      var aspectRatio = canvasData.aspectRatio;\n      var cropped = this.cropped && cropBoxData;\n\n      if (sizeLimited) {\n        var minCanvasWidth = Number(options.minCanvasWidth) || 0;\n        var minCanvasHeight = Number(options.minCanvasHeight) || 0;\n\n        if (viewMode > 1) {\n          minCanvasWidth = Math.max(minCanvasWidth, containerData.width);\n          minCanvasHeight = Math.max(minCanvasHeight, containerData.height);\n\n          if (viewMode === 3) {\n            if (minCanvasHeight * aspectRatio > minCanvasWidth) {\n              minCanvasWidth = minCanvasHeight * aspectRatio;\n            } else {\n              minCanvasHeight = minCanvasWidth / aspectRatio;\n            }\n          }\n        } else if (viewMode > 0) {\n          if (minCanvasWidth) {\n            minCanvasWidth = Math.max(minCanvasWidth, cropped ? cropBoxData.width : 0);\n          } else if (minCanvasHeight) {\n            minCanvasHeight = Math.max(minCanvasHeight, cropped ? cropBoxData.height : 0);\n          } else if (cropped) {\n            minCanvasWidth = cropBoxData.width;\n            minCanvasHeight = cropBoxData.height;\n\n            if (minCanvasHeight * aspectRatio > minCanvasWidth) {\n              minCanvasWidth = minCanvasHeight * aspectRatio;\n            } else {\n              minCanvasHeight = minCanvasWidth / aspectRatio;\n            }\n          }\n        }\n\n        var _getAdjustedSizes = getAdjustedSizes({\n          aspectRatio: aspectRatio,\n          width: minCanvasWidth,\n          height: minCanvasHeight\n        });\n\n        minCanvasWidth = _getAdjustedSizes.width;\n        minCanvasHeight = _getAdjustedSizes.height;\n        canvasData.minWidth = minCanvasWidth;\n        canvasData.minHeight = minCanvasHeight;\n        canvasData.maxWidth = Infinity;\n        canvasData.maxHeight = Infinity;\n      }\n\n      if (positionLimited) {\n        if (viewMode > (cropped ? 0 : 1)) {\n          var newCanvasLeft = containerData.width - canvasData.width;\n          var newCanvasTop = containerData.height - canvasData.height;\n          canvasData.minLeft = Math.min(0, newCanvasLeft);\n          canvasData.minTop = Math.min(0, newCanvasTop);\n          canvasData.maxLeft = Math.max(0, newCanvasLeft);\n          canvasData.maxTop = Math.max(0, newCanvasTop);\n\n          if (cropped && this.limited) {\n            canvasData.minLeft = Math.min(cropBoxData.left, cropBoxData.left + (cropBoxData.width - canvasData.width));\n            canvasData.minTop = Math.min(cropBoxData.top, cropBoxData.top + (cropBoxData.height - canvasData.height));\n            canvasData.maxLeft = cropBoxData.left;\n            canvasData.maxTop = cropBoxData.top;\n\n            if (viewMode === 2) {\n              if (canvasData.width >= containerData.width) {\n                canvasData.minLeft = Math.min(0, newCanvasLeft);\n                canvasData.maxLeft = Math.max(0, newCanvasLeft);\n              }\n\n              if (canvasData.height >= containerData.height) {\n                canvasData.minTop = Math.min(0, newCanvasTop);\n                canvasData.maxTop = Math.max(0, newCanvasTop);\n              }\n            }\n          }\n        } else {\n          canvasData.minLeft = -canvasData.width;\n          canvasData.minTop = -canvasData.height;\n          canvasData.maxLeft = containerData.width;\n          canvasData.maxTop = containerData.height;\n        }\n      }\n    },\n    renderCanvas: function renderCanvas(changed, transformed) {\n      var canvasData = this.canvasData,\n          imageData = this.imageData;\n\n      if (transformed) {\n        var _getRotatedSizes = getRotatedSizes({\n          width: imageData.naturalWidth * Math.abs(imageData.scaleX || 1),\n          height: imageData.naturalHeight * Math.abs(imageData.scaleY || 1),\n          degree: imageData.rotate || 0\n        }),\n            naturalWidth = _getRotatedSizes.width,\n            naturalHeight = _getRotatedSizes.height;\n\n        var width = canvasData.width * (naturalWidth / canvasData.naturalWidth);\n        var height = canvasData.height * (naturalHeight / canvasData.naturalHeight);\n        canvasData.left -= (width - canvasData.width) / 2;\n        canvasData.top -= (height - canvasData.height) / 2;\n        canvasData.width = width;\n        canvasData.height = height;\n        canvasData.aspectRatio = naturalWidth / naturalHeight;\n        canvasData.naturalWidth = naturalWidth;\n        canvasData.naturalHeight = naturalHeight;\n        this.limitCanvas(true, false);\n      }\n\n      if (canvasData.width > canvasData.maxWidth || canvasData.width < canvasData.minWidth) {\n        canvasData.left = canvasData.oldLeft;\n      }\n\n      if (canvasData.height > canvasData.maxHeight || canvasData.height < canvasData.minHeight) {\n        canvasData.top = canvasData.oldTop;\n      }\n\n      canvasData.width = Math.min(Math.max(canvasData.width, canvasData.minWidth), canvasData.maxWidth);\n      canvasData.height = Math.min(Math.max(canvasData.height, canvasData.minHeight), canvasData.maxHeight);\n      this.limitCanvas(false, true);\n      canvasData.left = Math.min(Math.max(canvasData.left, canvasData.minLeft), canvasData.maxLeft);\n      canvasData.top = Math.min(Math.max(canvasData.top, canvasData.minTop), canvasData.maxTop);\n      canvasData.oldLeft = canvasData.left;\n      canvasData.oldTop = canvasData.top;\n      setStyle(this.canvas, assign({\n        width: canvasData.width,\n        height: canvasData.height\n      }, getTransforms({\n        translateX: canvasData.left,\n        translateY: canvasData.top\n      })));\n      this.renderImage(changed);\n\n      if (this.cropped && this.limited) {\n        this.limitCropBox(true, true);\n      }\n    },\n    renderImage: function renderImage(changed) {\n      var canvasData = this.canvasData,\n          imageData = this.imageData;\n      var width = imageData.naturalWidth * (canvasData.width / canvasData.naturalWidth);\n      var height = imageData.naturalHeight * (canvasData.height / canvasData.naturalHeight);\n      assign(imageData, {\n        width: width,\n        height: height,\n        left: (canvasData.width - width) / 2,\n        top: (canvasData.height - height) / 2\n      });\n      setStyle(this.image, assign({\n        width: imageData.width,\n        height: imageData.height\n      }, getTransforms(assign({\n        translateX: imageData.left,\n        translateY: imageData.top\n      }, imageData))));\n\n      if (changed) {\n        this.output();\n      }\n    },\n    initCropBox: function initCropBox() {\n      var options = this.options,\n          canvasData = this.canvasData;\n      var aspectRatio = options.aspectRatio || options.initialAspectRatio;\n      var autoCropArea = Number(options.autoCropArea) || 0.8;\n      var cropBoxData = {\n        width: canvasData.width,\n        height: canvasData.height\n      };\n\n      if (aspectRatio) {\n        if (canvasData.height * aspectRatio > canvasData.width) {\n          cropBoxData.height = cropBoxData.width / aspectRatio;\n        } else {\n          cropBoxData.width = cropBoxData.height * aspectRatio;\n        }\n      }\n\n      this.cropBoxData = cropBoxData;\n      this.limitCropBox(true, true); // Initialize auto crop area\n\n      cropBoxData.width = Math.min(Math.max(cropBoxData.width, cropBoxData.minWidth), cropBoxData.maxWidth);\n      cropBoxData.height = Math.min(Math.max(cropBoxData.height, cropBoxData.minHeight), cropBoxData.maxHeight); // The width/height of auto crop area must large than \"minWidth/Height\"\n\n      cropBoxData.width = Math.max(cropBoxData.minWidth, cropBoxData.width * autoCropArea);\n      cropBoxData.height = Math.max(cropBoxData.minHeight, cropBoxData.height * autoCropArea);\n      cropBoxData.left = canvasData.left + (canvasData.width - cropBoxData.width) / 2;\n      cropBoxData.top = canvasData.top + (canvasData.height - cropBoxData.height) / 2;\n      cropBoxData.oldLeft = cropBoxData.left;\n      cropBoxData.oldTop = cropBoxData.top;\n      this.initialCropBoxData = assign({}, cropBoxData);\n    },\n    limitCropBox: function limitCropBox(sizeLimited, positionLimited) {\n      var options = this.options,\n          containerData = this.containerData,\n          canvasData = this.canvasData,\n          cropBoxData = this.cropBoxData,\n          limited = this.limited;\n      var aspectRatio = options.aspectRatio;\n\n      if (sizeLimited) {\n        var minCropBoxWidth = Number(options.minCropBoxWidth) || 0;\n        var minCropBoxHeight = Number(options.minCropBoxHeight) || 0;\n        var maxCropBoxWidth = limited ? Math.min(containerData.width, canvasData.width, canvasData.width + canvasData.left, containerData.width - canvasData.left) : containerData.width;\n        var maxCropBoxHeight = limited ? Math.min(containerData.height, canvasData.height, canvasData.height + canvasData.top, containerData.height - canvasData.top) : containerData.height; // The min/maxCropBoxWidth/Height must be less than container's width/height\n\n        minCropBoxWidth = Math.min(minCropBoxWidth, containerData.width);\n        minCropBoxHeight = Math.min(minCropBoxHeight, containerData.height);\n\n        if (aspectRatio) {\n          if (minCropBoxWidth && minCropBoxHeight) {\n            if (minCropBoxHeight * aspectRatio > minCropBoxWidth) {\n              minCropBoxHeight = minCropBoxWidth / aspectRatio;\n            } else {\n              minCropBoxWidth = minCropBoxHeight * aspectRatio;\n            }\n          } else if (minCropBoxWidth) {\n            minCropBoxHeight = minCropBoxWidth / aspectRatio;\n          } else if (minCropBoxHeight) {\n            minCropBoxWidth = minCropBoxHeight * aspectRatio;\n          }\n\n          if (maxCropBoxHeight * aspectRatio > maxCropBoxWidth) {\n            maxCropBoxHeight = maxCropBoxWidth / aspectRatio;\n          } else {\n            maxCropBoxWidth = maxCropBoxHeight * aspectRatio;\n          }\n        } // The minWidth/Height must be less than maxWidth/Height\n\n\n        cropBoxData.minWidth = Math.min(minCropBoxWidth, maxCropBoxWidth);\n        cropBoxData.minHeight = Math.min(minCropBoxHeight, maxCropBoxHeight);\n        cropBoxData.maxWidth = maxCropBoxWidth;\n        cropBoxData.maxHeight = maxCropBoxHeight;\n      }\n\n      if (positionLimited) {\n        if (limited) {\n          cropBoxData.minLeft = Math.max(0, canvasData.left);\n          cropBoxData.minTop = Math.max(0, canvasData.top);\n          cropBoxData.maxLeft = Math.min(containerData.width, canvasData.left + canvasData.width) - cropBoxData.width;\n          cropBoxData.maxTop = Math.min(containerData.height, canvasData.top + canvasData.height) - cropBoxData.height;\n        } else {\n          cropBoxData.minLeft = 0;\n          cropBoxData.minTop = 0;\n          cropBoxData.maxLeft = containerData.width - cropBoxData.width;\n          cropBoxData.maxTop = containerData.height - cropBoxData.height;\n        }\n      }\n    },\n    renderCropBox: function renderCropBox() {\n      var options = this.options,\n          containerData = this.containerData,\n          cropBoxData = this.cropBoxData;\n\n      if (cropBoxData.width > cropBoxData.maxWidth || cropBoxData.width < cropBoxData.minWidth) {\n        cropBoxData.left = cropBoxData.oldLeft;\n      }\n\n      if (cropBoxData.height > cropBoxData.maxHeight || cropBoxData.height < cropBoxData.minHeight) {\n        cropBoxData.top = cropBoxData.oldTop;\n      }\n\n      cropBoxData.width = Math.min(Math.max(cropBoxData.width, cropBoxData.minWidth), cropBoxData.maxWidth);\n      cropBoxData.height = Math.min(Math.max(cropBoxData.height, cropBoxData.minHeight), cropBoxData.maxHeight);\n      this.limitCropBox(false, true);\n      cropBoxData.left = Math.min(Math.max(cropBoxData.left, cropBoxData.minLeft), cropBoxData.maxLeft);\n      cropBoxData.top = Math.min(Math.max(cropBoxData.top, cropBoxData.minTop), cropBoxData.maxTop);\n      cropBoxData.oldLeft = cropBoxData.left;\n      cropBoxData.oldTop = cropBoxData.top;\n\n      if (options.movable && options.cropBoxMovable) {\n        // Turn to move the canvas when the crop box is equal to the container\n        setData(this.face, DATA_ACTION, cropBoxData.width >= containerData.width && cropBoxData.height >= containerData.height ? ACTION_MOVE : ACTION_ALL);\n      }\n\n      setStyle(this.cropBox, assign({\n        width: cropBoxData.width,\n        height: cropBoxData.height\n      }, getTransforms({\n        translateX: cropBoxData.left,\n        translateY: cropBoxData.top\n      })));\n\n      if (this.cropped && this.limited) {\n        this.limitCanvas(true, true);\n      }\n\n      if (!this.disabled) {\n        this.output();\n      }\n    },\n    output: function output() {\n      this.preview();\n      dispatchEvent(this.element, EVENT_CROP, this.getData());\n    }\n  };\n\n  var preview = {\n    initPreview: function initPreview() {\n      var crossOrigin = this.crossOrigin;\n      var preview = this.options.preview;\n      var url = crossOrigin ? this.crossOriginUrl : this.url;\n      var image = document.createElement('img');\n\n      if (crossOrigin) {\n        image.crossOrigin = crossOrigin;\n      }\n\n      image.src = url;\n      this.viewBox.appendChild(image);\n      this.viewBoxImage = image;\n\n      if (!preview) {\n        return;\n      }\n\n      var previews = preview;\n\n      if (typeof preview === 'string') {\n        previews = this.element.ownerDocument.querySelectorAll(preview);\n      } else if (preview.querySelector) {\n        previews = [preview];\n      }\n\n      this.previews = previews;\n      forEach(previews, function (el) {\n        var img = document.createElement('img'); // Save the original size for recover\n\n        setData(el, DATA_PREVIEW, {\n          width: el.offsetWidth,\n          height: el.offsetHeight,\n          html: el.innerHTML\n        });\n\n        if (crossOrigin) {\n          img.crossOrigin = crossOrigin;\n        }\n\n        img.src = url;\n        /**\n         * Override img element styles\n         * Add `display:block` to avoid margin top issue\n         * Add `height:auto` to override `height` attribute on IE8\n         * (Occur only when margin-top <= -height)\n         */\n\n        img.style.cssText = 'display:block;' + 'width:100%;' + 'height:auto;' + 'min-width:0!important;' + 'min-height:0!important;' + 'max-width:none!important;' + 'max-height:none!important;' + 'image-orientation:0deg!important;\"';\n        el.innerHTML = '';\n        el.appendChild(img);\n      });\n    },\n    resetPreview: function resetPreview() {\n      forEach(this.previews, function (element) {\n        var data = getData(element, DATA_PREVIEW);\n        setStyle(element, {\n          width: data.width,\n          height: data.height\n        });\n        element.innerHTML = data.html;\n        removeData(element, DATA_PREVIEW);\n      });\n    },\n    preview: function preview() {\n      var imageData = this.imageData,\n          canvasData = this.canvasData,\n          cropBoxData = this.cropBoxData;\n      var cropBoxWidth = cropBoxData.width,\n          cropBoxHeight = cropBoxData.height;\n      var width = imageData.width,\n          height = imageData.height;\n      var left = cropBoxData.left - canvasData.left - imageData.left;\n      var top = cropBoxData.top - canvasData.top - imageData.top;\n\n      if (!this.cropped || this.disabled) {\n        return;\n      }\n\n      setStyle(this.viewBoxImage, assign({\n        width: width,\n        height: height\n      }, getTransforms(assign({\n        translateX: -left,\n        translateY: -top\n      }, imageData))));\n      forEach(this.previews, function (element) {\n        var data = getData(element, DATA_PREVIEW);\n        var originalWidth = data.width;\n        var originalHeight = data.height;\n        var newWidth = originalWidth;\n        var newHeight = originalHeight;\n        var ratio = 1;\n\n        if (cropBoxWidth) {\n          ratio = originalWidth / cropBoxWidth;\n          newHeight = cropBoxHeight * ratio;\n        }\n\n        if (cropBoxHeight && newHeight > originalHeight) {\n          ratio = originalHeight / cropBoxHeight;\n          newWidth = cropBoxWidth * ratio;\n          newHeight = originalHeight;\n        }\n\n        setStyle(element, {\n          width: newWidth,\n          height: newHeight\n        });\n        setStyle(element.getElementsByTagName('img')[0], assign({\n          width: width * ratio,\n          height: height * ratio\n        }, getTransforms(assign({\n          translateX: -left * ratio,\n          translateY: -top * ratio\n        }, imageData))));\n      });\n    }\n  };\n\n  var events = {\n    bind: function bind() {\n      var element = this.element,\n          options = this.options,\n          cropper = this.cropper;\n\n      if (isFunction(options.cropstart)) {\n        addListener(element, EVENT_CROP_START, options.cropstart);\n      }\n\n      if (isFunction(options.cropmove)) {\n        addListener(element, EVENT_CROP_MOVE, options.cropmove);\n      }\n\n      if (isFunction(options.cropend)) {\n        addListener(element, EVENT_CROP_END, options.cropend);\n      }\n\n      if (isFunction(options.crop)) {\n        addListener(element, EVENT_CROP, options.crop);\n      }\n\n      if (isFunction(options.zoom)) {\n        addListener(element, EVENT_ZOOM, options.zoom);\n      }\n\n      addListener(cropper, EVENT_POINTER_DOWN, this.onCropStart = this.cropStart.bind(this));\n\n      if (options.zoomable && options.zoomOnWheel) {\n        addListener(cropper, EVENT_WHEEL, this.onWheel = this.wheel.bind(this), {\n          passive: false,\n          capture: true\n        });\n      }\n\n      if (options.toggleDragModeOnDblclick) {\n        addListener(cropper, EVENT_DBLCLICK, this.onDblclick = this.dblclick.bind(this));\n      }\n\n      addListener(element.ownerDocument, EVENT_POINTER_MOVE, this.onCropMove = this.cropMove.bind(this));\n      addListener(element.ownerDocument, EVENT_POINTER_UP, this.onCropEnd = this.cropEnd.bind(this));\n\n      if (options.responsive) {\n        addListener(window, EVENT_RESIZE, this.onResize = this.resize.bind(this));\n      }\n    },\n    unbind: function unbind() {\n      var element = this.element,\n          options = this.options,\n          cropper = this.cropper;\n\n      if (isFunction(options.cropstart)) {\n        removeListener(element, EVENT_CROP_START, options.cropstart);\n      }\n\n      if (isFunction(options.cropmove)) {\n        removeListener(element, EVENT_CROP_MOVE, options.cropmove);\n      }\n\n      if (isFunction(options.cropend)) {\n        removeListener(element, EVENT_CROP_END, options.cropend);\n      }\n\n      if (isFunction(options.crop)) {\n        removeListener(element, EVENT_CROP, options.crop);\n      }\n\n      if (isFunction(options.zoom)) {\n        removeListener(element, EVENT_ZOOM, options.zoom);\n      }\n\n      removeListener(cropper, EVENT_POINTER_DOWN, this.onCropStart);\n\n      if (options.zoomable && options.zoomOnWheel) {\n        removeListener(cropper, EVENT_WHEEL, this.onWheel, {\n          passive: false,\n          capture: true\n        });\n      }\n\n      if (options.toggleDragModeOnDblclick) {\n        removeListener(cropper, EVENT_DBLCLICK, this.onDblclick);\n      }\n\n      removeListener(element.ownerDocument, EVENT_POINTER_MOVE, this.onCropMove);\n      removeListener(element.ownerDocument, EVENT_POINTER_UP, this.onCropEnd);\n\n      if (options.responsive) {\n        removeListener(window, EVENT_RESIZE, this.onResize);\n      }\n    }\n  };\n\n  var handlers = {\n    resize: function resize() {\n      var options = this.options,\n          container = this.container,\n          containerData = this.containerData;\n      var minContainerWidth = Number(options.minContainerWidth) || MIN_CONTAINER_WIDTH;\n      var minContainerHeight = Number(options.minContainerHeight) || MIN_CONTAINER_HEIGHT;\n\n      if (this.disabled || containerData.width <= minContainerWidth || containerData.height <= minContainerHeight) {\n        return;\n      }\n\n      var ratio = container.offsetWidth / containerData.width; // Resize when width changed or height changed\n\n      if (ratio !== 1 || container.offsetHeight !== containerData.height) {\n        var canvasData;\n        var cropBoxData;\n\n        if (options.restore) {\n          canvasData = this.getCanvasData();\n          cropBoxData = this.getCropBoxData();\n        }\n\n        this.render();\n\n        if (options.restore) {\n          this.setCanvasData(forEach(canvasData, function (n, i) {\n            canvasData[i] = n * ratio;\n          }));\n          this.setCropBoxData(forEach(cropBoxData, function (n, i) {\n            cropBoxData[i] = n * ratio;\n          }));\n        }\n      }\n    },\n    dblclick: function dblclick() {\n      if (this.disabled || this.options.dragMode === DRAG_MODE_NONE) {\n        return;\n      }\n\n      this.setDragMode(hasClass(this.dragBox, CLASS_CROP) ? DRAG_MODE_MOVE : DRAG_MODE_CROP);\n    },\n    wheel: function wheel(event) {\n      var _this = this;\n\n      var ratio = Number(this.options.wheelZoomRatio) || 0.1;\n      var delta = 1;\n\n      if (this.disabled) {\n        return;\n      }\n\n      event.preventDefault(); // Limit wheel speed to prevent zoom too fast (#21)\n\n      if (this.wheeling) {\n        return;\n      }\n\n      this.wheeling = true;\n      setTimeout(function () {\n        _this.wheeling = false;\n      }, 50);\n\n      if (event.deltaY) {\n        delta = event.deltaY > 0 ? 1 : -1;\n      } else if (event.wheelDelta) {\n        delta = -event.wheelDelta / 120;\n      } else if (event.detail) {\n        delta = event.detail > 0 ? 1 : -1;\n      }\n\n      this.zoom(-delta * ratio, event);\n    },\n    cropStart: function cropStart(event) {\n      var buttons = event.buttons,\n          button = event.button;\n\n      if (this.disabled // No primary button (Usually the left button)\n      // Note that touch events have no `buttons` or `button` property\n      || isNumber(buttons) && buttons !== 1 || isNumber(button) && button !== 0 // Open context menu\n      || event.ctrlKey) {\n        return;\n      }\n\n      var options = this.options,\n          pointers = this.pointers;\n      var action;\n\n      if (event.changedTouches) {\n        // Handle touch event\n        forEach(event.changedTouches, function (touch) {\n          pointers[touch.identifier] = getPointer(touch);\n        });\n      } else {\n        // Handle mouse event and pointer event\n        pointers[event.pointerId || 0] = getPointer(event);\n      }\n\n      if (Object.keys(pointers).length > 1 && options.zoomable && options.zoomOnTouch) {\n        action = ACTION_ZOOM;\n      } else {\n        action = getData(event.target, DATA_ACTION);\n      }\n\n      if (!REGEXP_ACTIONS.test(action)) {\n        return;\n      }\n\n      if (dispatchEvent(this.element, EVENT_CROP_START, {\n        originalEvent: event,\n        action: action\n      }) === false) {\n        return;\n      } // This line is required for preventing page zooming in iOS browsers\n\n\n      event.preventDefault();\n      this.action = action;\n      this.cropping = false;\n\n      if (action === ACTION_CROP) {\n        this.cropping = true;\n        addClass(this.dragBox, CLASS_MODAL);\n      }\n    },\n    cropMove: function cropMove(event) {\n      var action = this.action;\n\n      if (this.disabled || !action) {\n        return;\n      }\n\n      var pointers = this.pointers;\n      event.preventDefault();\n\n      if (dispatchEvent(this.element, EVENT_CROP_MOVE, {\n        originalEvent: event,\n        action: action\n      }) === false) {\n        return;\n      }\n\n      if (event.changedTouches) {\n        forEach(event.changedTouches, function (touch) {\n          // The first parameter should not be undefined (#432)\n          assign(pointers[touch.identifier] || {}, getPointer(touch, true));\n        });\n      } else {\n        assign(pointers[event.pointerId || 0] || {}, getPointer(event, true));\n      }\n\n      this.change(event);\n    },\n    cropEnd: function cropEnd(event) {\n      if (this.disabled) {\n        return;\n      }\n\n      var action = this.action,\n          pointers = this.pointers;\n\n      if (event.changedTouches) {\n        forEach(event.changedTouches, function (touch) {\n          delete pointers[touch.identifier];\n        });\n      } else {\n        delete pointers[event.pointerId || 0];\n      }\n\n      if (!action) {\n        return;\n      }\n\n      event.preventDefault();\n\n      if (!Object.keys(pointers).length) {\n        this.action = '';\n      }\n\n      if (this.cropping) {\n        this.cropping = false;\n        toggleClass(this.dragBox, CLASS_MODAL, this.cropped && this.options.modal);\n      }\n\n      dispatchEvent(this.element, EVENT_CROP_END, {\n        originalEvent: event,\n        action: action\n      });\n    }\n  };\n\n  var change = {\n    change: function change(event) {\n      var options = this.options,\n          canvasData = this.canvasData,\n          containerData = this.containerData,\n          cropBoxData = this.cropBoxData,\n          pointers = this.pointers;\n      var action = this.action;\n      var aspectRatio = options.aspectRatio;\n      var left = cropBoxData.left,\n          top = cropBoxData.top,\n          width = cropBoxData.width,\n          height = cropBoxData.height;\n      var right = left + width;\n      var bottom = top + height;\n      var minLeft = 0;\n      var minTop = 0;\n      var maxWidth = containerData.width;\n      var maxHeight = containerData.height;\n      var renderable = true;\n      var offset; // Locking aspect ratio in \"free mode\" by holding shift key\n\n      if (!aspectRatio && event.shiftKey) {\n        aspectRatio = width && height ? width / height : 1;\n      }\n\n      if (this.limited) {\n        minLeft = cropBoxData.minLeft;\n        minTop = cropBoxData.minTop;\n        maxWidth = minLeft + Math.min(containerData.width, canvasData.width, canvasData.left + canvasData.width);\n        maxHeight = minTop + Math.min(containerData.height, canvasData.height, canvasData.top + canvasData.height);\n      }\n\n      var pointer = pointers[Object.keys(pointers)[0]];\n      var range = {\n        x: pointer.endX - pointer.startX,\n        y: pointer.endY - pointer.startY\n      };\n\n      var check = function check(side) {\n        switch (side) {\n          case ACTION_EAST:\n            if (right + range.x > maxWidth) {\n              range.x = maxWidth - right;\n            }\n\n            break;\n\n          case ACTION_WEST:\n            if (left + range.x < minLeft) {\n              range.x = minLeft - left;\n            }\n\n            break;\n\n          case ACTION_NORTH:\n            if (top + range.y < minTop) {\n              range.y = minTop - top;\n            }\n\n            break;\n\n          case ACTION_SOUTH:\n            if (bottom + range.y > maxHeight) {\n              range.y = maxHeight - bottom;\n            }\n\n            break;\n\n          default:\n        }\n      };\n\n      switch (action) {\n        // Move crop box\n        case ACTION_ALL:\n          left += range.x;\n          top += range.y;\n          break;\n        // Resize crop box\n\n        case ACTION_EAST:\n          if (range.x >= 0 && (right >= maxWidth || aspectRatio && (top <= minTop || bottom >= maxHeight))) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_EAST);\n          width += range.x;\n\n          if (width < 0) {\n            action = ACTION_WEST;\n            width = -width;\n            left -= width;\n          }\n\n          if (aspectRatio) {\n            height = width / aspectRatio;\n            top += (cropBoxData.height - height) / 2;\n          }\n\n          break;\n\n        case ACTION_NORTH:\n          if (range.y <= 0 && (top <= minTop || aspectRatio && (left <= minLeft || right >= maxWidth))) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_NORTH);\n          height -= range.y;\n          top += range.y;\n\n          if (height < 0) {\n            action = ACTION_SOUTH;\n            height = -height;\n            top -= height;\n          }\n\n          if (aspectRatio) {\n            width = height * aspectRatio;\n            left += (cropBoxData.width - width) / 2;\n          }\n\n          break;\n\n        case ACTION_WEST:\n          if (range.x <= 0 && (left <= minLeft || aspectRatio && (top <= minTop || bottom >= maxHeight))) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_WEST);\n          width -= range.x;\n          left += range.x;\n\n          if (width < 0) {\n            action = ACTION_EAST;\n            width = -width;\n            left -= width;\n          }\n\n          if (aspectRatio) {\n            height = width / aspectRatio;\n            top += (cropBoxData.height - height) / 2;\n          }\n\n          break;\n\n        case ACTION_SOUTH:\n          if (range.y >= 0 && (bottom >= maxHeight || aspectRatio && (left <= minLeft || right >= maxWidth))) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_SOUTH);\n          height += range.y;\n\n          if (height < 0) {\n            action = ACTION_NORTH;\n            height = -height;\n            top -= height;\n          }\n\n          if (aspectRatio) {\n            width = height * aspectRatio;\n            left += (cropBoxData.width - width) / 2;\n          }\n\n          break;\n\n        case ACTION_NORTH_EAST:\n          if (aspectRatio) {\n            if (range.y <= 0 && (top <= minTop || right >= maxWidth)) {\n              renderable = false;\n              break;\n            }\n\n            check(ACTION_NORTH);\n            height -= range.y;\n            top += range.y;\n            width = height * aspectRatio;\n          } else {\n            check(ACTION_NORTH);\n            check(ACTION_EAST);\n\n            if (range.x >= 0) {\n              if (right < maxWidth) {\n                width += range.x;\n              } else if (range.y <= 0 && top <= minTop) {\n                renderable = false;\n              }\n            } else {\n              width += range.x;\n            }\n\n            if (range.y <= 0) {\n              if (top > minTop) {\n                height -= range.y;\n                top += range.y;\n              }\n            } else {\n              height -= range.y;\n              top += range.y;\n            }\n          }\n\n          if (width < 0 && height < 0) {\n            action = ACTION_SOUTH_WEST;\n            height = -height;\n            width = -width;\n            top -= height;\n            left -= width;\n          } else if (width < 0) {\n            action = ACTION_NORTH_WEST;\n            width = -width;\n            left -= width;\n          } else if (height < 0) {\n            action = ACTION_SOUTH_EAST;\n            height = -height;\n            top -= height;\n          }\n\n          break;\n\n        case ACTION_NORTH_WEST:\n          if (aspectRatio) {\n            if (range.y <= 0 && (top <= minTop || left <= minLeft)) {\n              renderable = false;\n              break;\n            }\n\n            check(ACTION_NORTH);\n            height -= range.y;\n            top += range.y;\n            width = height * aspectRatio;\n            left += cropBoxData.width - width;\n          } else {\n            check(ACTION_NORTH);\n            check(ACTION_WEST);\n\n            if (range.x <= 0) {\n              if (left > minLeft) {\n                width -= range.x;\n                left += range.x;\n              } else if (range.y <= 0 && top <= minTop) {\n                renderable = false;\n              }\n            } else {\n              width -= range.x;\n              left += range.x;\n            }\n\n            if (range.y <= 0) {\n              if (top > minTop) {\n                height -= range.y;\n                top += range.y;\n              }\n            } else {\n              height -= range.y;\n              top += range.y;\n            }\n          }\n\n          if (width < 0 && height < 0) {\n            action = ACTION_SOUTH_EAST;\n            height = -height;\n            width = -width;\n            top -= height;\n            left -= width;\n          } else if (width < 0) {\n            action = ACTION_NORTH_EAST;\n            width = -width;\n            left -= width;\n          } else if (height < 0) {\n            action = ACTION_SOUTH_WEST;\n            height = -height;\n            top -= height;\n          }\n\n          break;\n\n        case ACTION_SOUTH_WEST:\n          if (aspectRatio) {\n            if (range.x <= 0 && (left <= minLeft || bottom >= maxHeight)) {\n              renderable = false;\n              break;\n            }\n\n            check(ACTION_WEST);\n            width -= range.x;\n            left += range.x;\n            height = width / aspectRatio;\n          } else {\n            check(ACTION_SOUTH);\n            check(ACTION_WEST);\n\n            if (range.x <= 0) {\n              if (left > minLeft) {\n                width -= range.x;\n                left += range.x;\n              } else if (range.y >= 0 && bottom >= maxHeight) {\n                renderable = false;\n              }\n            } else {\n              width -= range.x;\n              left += range.x;\n            }\n\n            if (range.y >= 0) {\n              if (bottom < maxHeight) {\n                height += range.y;\n              }\n            } else {\n              height += range.y;\n            }\n          }\n\n          if (width < 0 && height < 0) {\n            action = ACTION_NORTH_EAST;\n            height = -height;\n            width = -width;\n            top -= height;\n            left -= width;\n          } else if (width < 0) {\n            action = ACTION_SOUTH_EAST;\n            width = -width;\n            left -= width;\n          } else if (height < 0) {\n            action = ACTION_NORTH_WEST;\n            height = -height;\n            top -= height;\n          }\n\n          break;\n\n        case ACTION_SOUTH_EAST:\n          if (aspectRatio) {\n            if (range.x >= 0 && (right >= maxWidth || bottom >= maxHeight)) {\n              renderable = false;\n              break;\n            }\n\n            check(ACTION_EAST);\n            width += range.x;\n            height = width / aspectRatio;\n          } else {\n            check(ACTION_SOUTH);\n            check(ACTION_EAST);\n\n            if (range.x >= 0) {\n              if (right < maxWidth) {\n                width += range.x;\n              } else if (range.y >= 0 && bottom >= maxHeight) {\n                renderable = false;\n              }\n            } else {\n              width += range.x;\n            }\n\n            if (range.y >= 0) {\n              if (bottom < maxHeight) {\n                height += range.y;\n              }\n            } else {\n              height += range.y;\n            }\n          }\n\n          if (width < 0 && height < 0) {\n            action = ACTION_NORTH_WEST;\n            height = -height;\n            width = -width;\n            top -= height;\n            left -= width;\n          } else if (width < 0) {\n            action = ACTION_SOUTH_WEST;\n            width = -width;\n            left -= width;\n          } else if (height < 0) {\n            action = ACTION_NORTH_EAST;\n            height = -height;\n            top -= height;\n          }\n\n          break;\n        // Move canvas\n\n        case ACTION_MOVE:\n          this.move(range.x, range.y);\n          renderable = false;\n          break;\n        // Zoom canvas\n\n        case ACTION_ZOOM:\n          this.zoom(getMaxZoomRatio(pointers), event);\n          renderable = false;\n          break;\n        // Create crop box\n\n        case ACTION_CROP:\n          if (!range.x || !range.y) {\n            renderable = false;\n            break;\n          }\n\n          offset = getOffset(this.cropper);\n          left = pointer.startX - offset.left;\n          top = pointer.startY - offset.top;\n          width = cropBoxData.minWidth;\n          height = cropBoxData.minHeight;\n\n          if (range.x > 0) {\n            action = range.y > 0 ? ACTION_SOUTH_EAST : ACTION_NORTH_EAST;\n          } else if (range.x < 0) {\n            left -= width;\n            action = range.y > 0 ? ACTION_SOUTH_WEST : ACTION_NORTH_WEST;\n          }\n\n          if (range.y < 0) {\n            top -= height;\n          } // Show the crop box if is hidden\n\n\n          if (!this.cropped) {\n            removeClass(this.cropBox, CLASS_HIDDEN);\n            this.cropped = true;\n\n            if (this.limited) {\n              this.limitCropBox(true, true);\n            }\n          }\n\n          break;\n\n        default:\n      }\n\n      if (renderable) {\n        cropBoxData.width = width;\n        cropBoxData.height = height;\n        cropBoxData.left = left;\n        cropBoxData.top = top;\n        this.action = action;\n        this.renderCropBox();\n      } // Override\n\n\n      forEach(pointers, function (p) {\n        p.startX = p.endX;\n        p.startY = p.endY;\n      });\n    }\n  };\n\n  var methods = {\n    // Show the crop box manually\n    crop: function crop() {\n      if (this.ready && !this.cropped && !this.disabled) {\n        this.cropped = true;\n        this.limitCropBox(true, true);\n\n        if (this.options.modal) {\n          addClass(this.dragBox, CLASS_MODAL);\n        }\n\n        removeClass(this.cropBox, CLASS_HIDDEN);\n        this.setCropBoxData(this.initialCropBoxData);\n      }\n\n      return this;\n    },\n    // Reset the image and crop box to their initial states\n    reset: function reset() {\n      if (this.ready && !this.disabled) {\n        this.imageData = assign({}, this.initialImageData);\n        this.canvasData = assign({}, this.initialCanvasData);\n        this.cropBoxData = assign({}, this.initialCropBoxData);\n        this.renderCanvas();\n\n        if (this.cropped) {\n          this.renderCropBox();\n        }\n      }\n\n      return this;\n    },\n    // Clear the crop box\n    clear: function clear() {\n      if (this.cropped && !this.disabled) {\n        assign(this.cropBoxData, {\n          left: 0,\n          top: 0,\n          width: 0,\n          height: 0\n        });\n        this.cropped = false;\n        this.renderCropBox();\n        this.limitCanvas(true, true); // Render canvas after crop box rendered\n\n        this.renderCanvas();\n        removeClass(this.dragBox, CLASS_MODAL);\n        addClass(this.cropBox, CLASS_HIDDEN);\n      }\n\n      return this;\n    },\n\n    /**\n     * Replace the image's src and rebuild the cropper\n     * @param {string} url - The new URL.\n     * @param {boolean} [hasSameSize] - Indicate if the new image has the same size as the old one.\n     * @returns {Cropper} this\n     */\n    replace: function replace(url) {\n      var hasSameSize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (!this.disabled && url) {\n        if (this.isImg) {\n          this.element.src = url;\n        }\n\n        if (hasSameSize) {\n          this.url = url;\n          this.image.src = url;\n\n          if (this.ready) {\n            this.viewBoxImage.src = url;\n            forEach(this.previews, function (element) {\n              element.getElementsByTagName('img')[0].src = url;\n            });\n          }\n        } else {\n          if (this.isImg) {\n            this.replaced = true;\n          }\n\n          this.options.data = null;\n          this.uncreate();\n          this.load(url);\n        }\n      }\n\n      return this;\n    },\n    // Enable (unfreeze) the cropper\n    enable: function enable() {\n      if (this.ready && this.disabled) {\n        this.disabled = false;\n        removeClass(this.cropper, CLASS_DISABLED);\n      }\n\n      return this;\n    },\n    // Disable (freeze) the cropper\n    disable: function disable() {\n      if (this.ready && !this.disabled) {\n        this.disabled = true;\n        addClass(this.cropper, CLASS_DISABLED);\n      }\n\n      return this;\n    },\n\n    /**\n     * Destroy the cropper and remove the instance from the image\n     * @returns {Cropper} this\n     */\n    destroy: function destroy() {\n      var element = this.element;\n\n      if (!element[NAMESPACE]) {\n        return this;\n      }\n\n      element[NAMESPACE] = undefined;\n\n      if (this.isImg && this.replaced) {\n        element.src = this.originalUrl;\n      }\n\n      this.uncreate();\n      return this;\n    },\n\n    /**\n     * Move the canvas with relative offsets\n     * @param {number} offsetX - The relative offset distance on the x-axis.\n     * @param {number} [offsetY=offsetX] - The relative offset distance on the y-axis.\n     * @returns {Cropper} this\n     */\n    move: function move(offsetX) {\n      var offsetY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : offsetX;\n      var _this$canvasData = this.canvasData,\n          left = _this$canvasData.left,\n          top = _this$canvasData.top;\n      return this.moveTo(isUndefined(offsetX) ? offsetX : left + Number(offsetX), isUndefined(offsetY) ? offsetY : top + Number(offsetY));\n    },\n\n    /**\n     * Move the canvas to an absolute point\n     * @param {number} x - The x-axis coordinate.\n     * @param {number} [y=x] - The y-axis coordinate.\n     * @returns {Cropper} this\n     */\n    moveTo: function moveTo(x) {\n      var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : x;\n      var canvasData = this.canvasData;\n      var changed = false;\n      x = Number(x);\n      y = Number(y);\n\n      if (this.ready && !this.disabled && this.options.movable) {\n        if (isNumber(x)) {\n          canvasData.left = x;\n          changed = true;\n        }\n\n        if (isNumber(y)) {\n          canvasData.top = y;\n          changed = true;\n        }\n\n        if (changed) {\n          this.renderCanvas(true);\n        }\n      }\n\n      return this;\n    },\n\n    /**\n     * Zoom the canvas with a relative ratio\n     * @param {number} ratio - The target ratio.\n     * @param {Event} _originalEvent - The original event if any.\n     * @returns {Cropper} this\n     */\n    zoom: function zoom(ratio, _originalEvent) {\n      var canvasData = this.canvasData;\n      ratio = Number(ratio);\n\n      if (ratio < 0) {\n        ratio = 1 / (1 - ratio);\n      } else {\n        ratio = 1 + ratio;\n      }\n\n      return this.zoomTo(canvasData.width * ratio / canvasData.naturalWidth, null, _originalEvent);\n    },\n\n    /**\n     * Zoom the canvas to an absolute ratio\n     * @param {number} ratio - The target ratio.\n     * @param {Object} pivot - The zoom pivot point coordinate.\n     * @param {Event} _originalEvent - The original event if any.\n     * @returns {Cropper} this\n     */\n    zoomTo: function zoomTo(ratio, pivot, _originalEvent) {\n      var options = this.options,\n          canvasData = this.canvasData;\n      var width = canvasData.width,\n          height = canvasData.height,\n          naturalWidth = canvasData.naturalWidth,\n          naturalHeight = canvasData.naturalHeight;\n      ratio = Number(ratio);\n\n      if (ratio >= 0 && this.ready && !this.disabled && options.zoomable) {\n        var newWidth = naturalWidth * ratio;\n        var newHeight = naturalHeight * ratio;\n\n        if (dispatchEvent(this.element, EVENT_ZOOM, {\n          ratio: ratio,\n          oldRatio: width / naturalWidth,\n          originalEvent: _originalEvent\n        }) === false) {\n          return this;\n        }\n\n        if (_originalEvent) {\n          var pointers = this.pointers;\n          var offset = getOffset(this.cropper);\n          var center = pointers && Object.keys(pointers).length ? getPointersCenter(pointers) : {\n            pageX: _originalEvent.pageX,\n            pageY: _originalEvent.pageY\n          }; // Zoom from the triggering point of the event\n\n          canvasData.left -= (newWidth - width) * ((center.pageX - offset.left - canvasData.left) / width);\n          canvasData.top -= (newHeight - height) * ((center.pageY - offset.top - canvasData.top) / height);\n        } else if (isPlainObject(pivot) && isNumber(pivot.x) && isNumber(pivot.y)) {\n          canvasData.left -= (newWidth - width) * ((pivot.x - canvasData.left) / width);\n          canvasData.top -= (newHeight - height) * ((pivot.y - canvasData.top) / height);\n        } else {\n          // Zoom from the center of the canvas\n          canvasData.left -= (newWidth - width) / 2;\n          canvasData.top -= (newHeight - height) / 2;\n        }\n\n        canvasData.width = newWidth;\n        canvasData.height = newHeight;\n        this.renderCanvas(true);\n      }\n\n      return this;\n    },\n\n    /**\n     * Rotate the canvas with a relative degree\n     * @param {number} degree - The rotate degree.\n     * @returns {Cropper} this\n     */\n    rotate: function rotate(degree) {\n      return this.rotateTo((this.imageData.rotate || 0) + Number(degree));\n    },\n\n    /**\n     * Rotate the canvas to an absolute degree\n     * @param {number} degree - The rotate degree.\n     * @returns {Cropper} this\n     */\n    rotateTo: function rotateTo(degree) {\n      degree = Number(degree);\n\n      if (isNumber(degree) && this.ready && !this.disabled && this.options.rotatable) {\n        this.imageData.rotate = degree % 360;\n        this.renderCanvas(true, true);\n      }\n\n      return this;\n    },\n\n    /**\n     * Scale the image on the x-axis.\n     * @param {number} scaleX - The scale ratio on the x-axis.\n     * @returns {Cropper} this\n     */\n    scaleX: function scaleX(_scaleX) {\n      var scaleY = this.imageData.scaleY;\n      return this.scale(_scaleX, isNumber(scaleY) ? scaleY : 1);\n    },\n\n    /**\n     * Scale the image on the y-axis.\n     * @param {number} scaleY - The scale ratio on the y-axis.\n     * @returns {Cropper} this\n     */\n    scaleY: function scaleY(_scaleY) {\n      var scaleX = this.imageData.scaleX;\n      return this.scale(isNumber(scaleX) ? scaleX : 1, _scaleY);\n    },\n\n    /**\n     * Scale the image\n     * @param {number} scaleX - The scale ratio on the x-axis.\n     * @param {number} [scaleY=scaleX] - The scale ratio on the y-axis.\n     * @returns {Cropper} this\n     */\n    scale: function scale(scaleX) {\n      var scaleY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : scaleX;\n      var imageData = this.imageData;\n      var transformed = false;\n      scaleX = Number(scaleX);\n      scaleY = Number(scaleY);\n\n      if (this.ready && !this.disabled && this.options.scalable) {\n        if (isNumber(scaleX)) {\n          imageData.scaleX = scaleX;\n          transformed = true;\n        }\n\n        if (isNumber(scaleY)) {\n          imageData.scaleY = scaleY;\n          transformed = true;\n        }\n\n        if (transformed) {\n          this.renderCanvas(true, true);\n        }\n      }\n\n      return this;\n    },\n\n    /**\n     * Get the cropped area position and size data (base on the original image)\n     * @param {boolean} [rounded=false] - Indicate if round the data values or not.\n     * @returns {Object} The result cropped data.\n     */\n    getData: function getData() {\n      var rounded = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var options = this.options,\n          imageData = this.imageData,\n          canvasData = this.canvasData,\n          cropBoxData = this.cropBoxData;\n      var data;\n\n      if (this.ready && this.cropped) {\n        data = {\n          x: cropBoxData.left - canvasData.left,\n          y: cropBoxData.top - canvasData.top,\n          width: cropBoxData.width,\n          height: cropBoxData.height\n        };\n        var ratio = imageData.width / imageData.naturalWidth;\n        forEach(data, function (n, i) {\n          data[i] = n / ratio;\n        });\n\n        if (rounded) {\n          // In case rounding off leads to extra 1px in right or bottom border\n          // we should round the top-left corner and the dimension (#343).\n          var bottom = Math.round(data.y + data.height);\n          var right = Math.round(data.x + data.width);\n          data.x = Math.round(data.x);\n          data.y = Math.round(data.y);\n          data.width = right - data.x;\n          data.height = bottom - data.y;\n        }\n      } else {\n        data = {\n          x: 0,\n          y: 0,\n          width: 0,\n          height: 0\n        };\n      }\n\n      if (options.rotatable) {\n        data.rotate = imageData.rotate || 0;\n      }\n\n      if (options.scalable) {\n        data.scaleX = imageData.scaleX || 1;\n        data.scaleY = imageData.scaleY || 1;\n      }\n\n      return data;\n    },\n\n    /**\n     * Set the cropped area position and size with new data\n     * @param {Object} data - The new data.\n     * @returns {Cropper} this\n     */\n    setData: function setData(data) {\n      var options = this.options,\n          imageData = this.imageData,\n          canvasData = this.canvasData;\n      var cropBoxData = {};\n\n      if (this.ready && !this.disabled && isPlainObject(data)) {\n        var transformed = false;\n\n        if (options.rotatable) {\n          if (isNumber(data.rotate) && data.rotate !== imageData.rotate) {\n            imageData.rotate = data.rotate;\n            transformed = true;\n          }\n        }\n\n        if (options.scalable) {\n          if (isNumber(data.scaleX) && data.scaleX !== imageData.scaleX) {\n            imageData.scaleX = data.scaleX;\n            transformed = true;\n          }\n\n          if (isNumber(data.scaleY) && data.scaleY !== imageData.scaleY) {\n            imageData.scaleY = data.scaleY;\n            transformed = true;\n          }\n        }\n\n        if (transformed) {\n          this.renderCanvas(true, true);\n        }\n\n        var ratio = imageData.width / imageData.naturalWidth;\n\n        if (isNumber(data.x)) {\n          cropBoxData.left = data.x * ratio + canvasData.left;\n        }\n\n        if (isNumber(data.y)) {\n          cropBoxData.top = data.y * ratio + canvasData.top;\n        }\n\n        if (isNumber(data.width)) {\n          cropBoxData.width = data.width * ratio;\n        }\n\n        if (isNumber(data.height)) {\n          cropBoxData.height = data.height * ratio;\n        }\n\n        this.setCropBoxData(cropBoxData);\n      }\n\n      return this;\n    },\n\n    /**\n     * Get the container size data.\n     * @returns {Object} The result container data.\n     */\n    getContainerData: function getContainerData() {\n      return this.ready ? assign({}, this.containerData) : {};\n    },\n\n    /**\n     * Get the image position and size data.\n     * @returns {Object} The result image data.\n     */\n    getImageData: function getImageData() {\n      return this.sized ? assign({}, this.imageData) : {};\n    },\n\n    /**\n     * Get the canvas position and size data.\n     * @returns {Object} The result canvas data.\n     */\n    getCanvasData: function getCanvasData() {\n      var canvasData = this.canvasData;\n      var data = {};\n\n      if (this.ready) {\n        forEach(['left', 'top', 'width', 'height', 'naturalWidth', 'naturalHeight'], function (n) {\n          data[n] = canvasData[n];\n        });\n      }\n\n      return data;\n    },\n\n    /**\n     * Set the canvas position and size with new data.\n     * @param {Object} data - The new canvas data.\n     * @returns {Cropper} this\n     */\n    setCanvasData: function setCanvasData(data) {\n      var canvasData = this.canvasData;\n      var aspectRatio = canvasData.aspectRatio;\n\n      if (this.ready && !this.disabled && isPlainObject(data)) {\n        if (isNumber(data.left)) {\n          canvasData.left = data.left;\n        }\n\n        if (isNumber(data.top)) {\n          canvasData.top = data.top;\n        }\n\n        if (isNumber(data.width)) {\n          canvasData.width = data.width;\n          canvasData.height = data.width / aspectRatio;\n        } else if (isNumber(data.height)) {\n          canvasData.height = data.height;\n          canvasData.width = data.height * aspectRatio;\n        }\n\n        this.renderCanvas(true);\n      }\n\n      return this;\n    },\n\n    /**\n     * Get the crop box position and size data.\n     * @returns {Object} The result crop box data.\n     */\n    getCropBoxData: function getCropBoxData() {\n      var cropBoxData = this.cropBoxData;\n      var data;\n\n      if (this.ready && this.cropped) {\n        data = {\n          left: cropBoxData.left,\n          top: cropBoxData.top,\n          width: cropBoxData.width,\n          height: cropBoxData.height\n        };\n      }\n\n      return data || {};\n    },\n\n    /**\n     * Set the crop box position and size with new data.\n     * @param {Object} data - The new crop box data.\n     * @returns {Cropper} this\n     */\n    setCropBoxData: function setCropBoxData(data) {\n      var cropBoxData = this.cropBoxData;\n      var aspectRatio = this.options.aspectRatio;\n      var widthChanged;\n      var heightChanged;\n\n      if (this.ready && this.cropped && !this.disabled && isPlainObject(data)) {\n        if (isNumber(data.left)) {\n          cropBoxData.left = data.left;\n        }\n\n        if (isNumber(data.top)) {\n          cropBoxData.top = data.top;\n        }\n\n        if (isNumber(data.width) && data.width !== cropBoxData.width) {\n          widthChanged = true;\n          cropBoxData.width = data.width;\n        }\n\n        if (isNumber(data.height) && data.height !== cropBoxData.height) {\n          heightChanged = true;\n          cropBoxData.height = data.height;\n        }\n\n        if (aspectRatio) {\n          if (widthChanged) {\n            cropBoxData.height = cropBoxData.width / aspectRatio;\n          } else if (heightChanged) {\n            cropBoxData.width = cropBoxData.height * aspectRatio;\n          }\n        }\n\n        this.renderCropBox();\n      }\n\n      return this;\n    },\n\n    /**\n     * Get a canvas drawn the cropped image.\n     * @param {Object} [options={}] - The config options.\n     * @returns {HTMLCanvasElement} - The result canvas.\n     */\n    getCroppedCanvas: function getCroppedCanvas() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      if (!this.ready || !window.HTMLCanvasElement) {\n        return null;\n      }\n\n      var canvasData = this.canvasData;\n      var source = getSourceCanvas(this.image, this.imageData, canvasData, options); // Returns the source canvas if it is not cropped.\n\n      if (!this.cropped) {\n        return source;\n      }\n\n      var _this$getData = this.getData(),\n          initialX = _this$getData.x,\n          initialY = _this$getData.y,\n          initialWidth = _this$getData.width,\n          initialHeight = _this$getData.height;\n\n      var ratio = source.width / Math.floor(canvasData.naturalWidth);\n\n      if (ratio !== 1) {\n        initialX *= ratio;\n        initialY *= ratio;\n        initialWidth *= ratio;\n        initialHeight *= ratio;\n      }\n\n      var aspectRatio = initialWidth / initialHeight;\n      var maxSizes = getAdjustedSizes({\n        aspectRatio: aspectRatio,\n        width: options.maxWidth || Infinity,\n        height: options.maxHeight || Infinity\n      });\n      var minSizes = getAdjustedSizes({\n        aspectRatio: aspectRatio,\n        width: options.minWidth || 0,\n        height: options.minHeight || 0\n      }, 'cover');\n\n      var _getAdjustedSizes = getAdjustedSizes({\n        aspectRatio: aspectRatio,\n        width: options.width || (ratio !== 1 ? source.width : initialWidth),\n        height: options.height || (ratio !== 1 ? source.height : initialHeight)\n      }),\n          width = _getAdjustedSizes.width,\n          height = _getAdjustedSizes.height;\n\n      width = Math.min(maxSizes.width, Math.max(minSizes.width, width));\n      height = Math.min(maxSizes.height, Math.max(minSizes.height, height));\n      var canvas = document.createElement('canvas');\n      var context = canvas.getContext('2d');\n      canvas.width = normalizeDecimalNumber(width);\n      canvas.height = normalizeDecimalNumber(height);\n      context.fillStyle = options.fillColor || 'transparent';\n      context.fillRect(0, 0, width, height);\n      var _options$imageSmoothi = options.imageSmoothingEnabled,\n          imageSmoothingEnabled = _options$imageSmoothi === void 0 ? true : _options$imageSmoothi,\n          imageSmoothingQuality = options.imageSmoothingQuality;\n      context.imageSmoothingEnabled = imageSmoothingEnabled;\n\n      if (imageSmoothingQuality) {\n        context.imageSmoothingQuality = imageSmoothingQuality;\n      } // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D.drawImage\n\n\n      var sourceWidth = source.width;\n      var sourceHeight = source.height; // Source canvas parameters\n\n      var srcX = initialX;\n      var srcY = initialY;\n      var srcWidth;\n      var srcHeight; // Destination canvas parameters\n\n      var dstX;\n      var dstY;\n      var dstWidth;\n      var dstHeight;\n\n      if (srcX <= -initialWidth || srcX > sourceWidth) {\n        srcX = 0;\n        srcWidth = 0;\n        dstX = 0;\n        dstWidth = 0;\n      } else if (srcX <= 0) {\n        dstX = -srcX;\n        srcX = 0;\n        srcWidth = Math.min(sourceWidth, initialWidth + srcX);\n        dstWidth = srcWidth;\n      } else if (srcX <= sourceWidth) {\n        dstX = 0;\n        srcWidth = Math.min(initialWidth, sourceWidth - srcX);\n        dstWidth = srcWidth;\n      }\n\n      if (srcWidth <= 0 || srcY <= -initialHeight || srcY > sourceHeight) {\n        srcY = 0;\n        srcHeight = 0;\n        dstY = 0;\n        dstHeight = 0;\n      } else if (srcY <= 0) {\n        dstY = -srcY;\n        srcY = 0;\n        srcHeight = Math.min(sourceHeight, initialHeight + srcY);\n        dstHeight = srcHeight;\n      } else if (srcY <= sourceHeight) {\n        dstY = 0;\n        srcHeight = Math.min(initialHeight, sourceHeight - srcY);\n        dstHeight = srcHeight;\n      }\n\n      var params = [srcX, srcY, srcWidth, srcHeight]; // Avoid \"IndexSizeError\"\n\n      if (dstWidth > 0 && dstHeight > 0) {\n        var scale = width / initialWidth;\n        params.push(dstX * scale, dstY * scale, dstWidth * scale, dstHeight * scale);\n      } // All the numerical parameters should be integer for `drawImage`\n      // https://github.com/fengyuanchen/cropper/issues/476\n\n\n      context.drawImage.apply(context, [source].concat(_toConsumableArray(params.map(function (param) {\n        return Math.floor(normalizeDecimalNumber(param));\n      }))));\n      return canvas;\n    },\n\n    /**\n     * Change the aspect ratio of the crop box.\n     * @param {number} aspectRatio - The new aspect ratio.\n     * @returns {Cropper} this\n     */\n    setAspectRatio: function setAspectRatio(aspectRatio) {\n      var options = this.options;\n\n      if (!this.disabled && !isUndefined(aspectRatio)) {\n        // 0 -> NaN\n        options.aspectRatio = Math.max(0, aspectRatio) || NaN;\n\n        if (this.ready) {\n          this.initCropBox();\n\n          if (this.cropped) {\n            this.renderCropBox();\n          }\n        }\n      }\n\n      return this;\n    },\n\n    /**\n     * Change the drag mode.\n     * @param {string} mode - The new drag mode.\n     * @returns {Cropper} this\n     */\n    setDragMode: function setDragMode(mode) {\n      var options = this.options,\n          dragBox = this.dragBox,\n          face = this.face;\n\n      if (this.ready && !this.disabled) {\n        var croppable = mode === DRAG_MODE_CROP;\n        var movable = options.movable && mode === DRAG_MODE_MOVE;\n        mode = croppable || movable ? mode : DRAG_MODE_NONE;\n        options.dragMode = mode;\n        setData(dragBox, DATA_ACTION, mode);\n        toggleClass(dragBox, CLASS_CROP, croppable);\n        toggleClass(dragBox, CLASS_MOVE, movable);\n\n        if (!options.cropBoxMovable) {\n          // Sync drag mode to crop box when it is not movable\n          setData(face, DATA_ACTION, mode);\n          toggleClass(face, CLASS_CROP, croppable);\n          toggleClass(face, CLASS_MOVE, movable);\n        }\n      }\n\n      return this;\n    }\n  };\n\n  var AnotherCropper = WINDOW.Cropper;\n\n  var Cropper =\n  /*#__PURE__*/\n  function () {\n    /**\n     * Create a new Cropper.\n     * @param {Element} element - The target element for cropping.\n     * @param {Object} [options={}] - The configuration options.\n     */\n    function Cropper(element) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      _classCallCheck(this, Cropper);\n\n      if (!element || !REGEXP_TAG_NAME.test(element.tagName)) {\n        throw new Error('The first argument is required and must be an <img> or <canvas> element.');\n      }\n\n      this.element = element;\n      this.options = assign({}, DEFAULTS, isPlainObject(options) && options);\n      this.cropped = false;\n      this.disabled = false;\n      this.pointers = {};\n      this.ready = false;\n      this.reloading = false;\n      this.replaced = false;\n      this.sized = false;\n      this.sizing = false;\n      this.init();\n    }\n\n    _createClass(Cropper, [{\n      key: \"init\",\n      value: function init() {\n        var element = this.element;\n        var tagName = element.tagName.toLowerCase();\n        var url;\n\n        if (element[NAMESPACE]) {\n          return;\n        }\n\n        element[NAMESPACE] = this;\n\n        if (tagName === 'img') {\n          this.isImg = true; // e.g.: \"img/picture.jpg\"\n\n          url = element.getAttribute('src') || '';\n          this.originalUrl = url; // Stop when it's a blank image\n\n          if (!url) {\n            return;\n          } // e.g.: \"http://example.com/img/picture.jpg\"\n\n\n          url = element.src;\n        } else if (tagName === 'canvas' && window.HTMLCanvasElement) {\n          url = element.toDataURL();\n        }\n\n        this.load(url);\n      }\n    }, {\n      key: \"load\",\n      value: function load(url) {\n        var _this = this;\n\n        if (!url) {\n          return;\n        }\n\n        this.url = url;\n        this.imageData = {};\n        var element = this.element,\n            options = this.options;\n\n        if (!options.rotatable && !options.scalable) {\n          options.checkOrientation = false;\n        } // Only IE10+ supports Typed Arrays\n\n\n        if (!options.checkOrientation || !window.ArrayBuffer) {\n          this.clone();\n          return;\n        } // Read ArrayBuffer from Data URL of JPEG images directly for better performance.\n\n\n        if (REGEXP_DATA_URL_JPEG.test(url)) {\n          this.read(dataURLToArrayBuffer(url));\n          return;\n        }\n\n        var xhr = new XMLHttpRequest();\n        var clone = this.clone.bind(this);\n        this.reloading = true;\n        this.xhr = xhr; // 1. Cross origin requests are only supported for protocol schemes:\n        // http, https, data, chrome, chrome-extension.\n        // 2. Access to XMLHttpRequest from a Data URL will be blocked by CORS policy\n        // in some browsers as IE11 and Safari.\n\n        xhr.onabort = clone;\n        xhr.onerror = clone;\n        xhr.ontimeout = clone;\n\n        xhr.onprogress = function () {\n          if (xhr.getResponseHeader('content-type') !== MIME_TYPE_JPEG) {\n            xhr.abort();\n          }\n        };\n\n        xhr.onload = function () {\n          _this.read(xhr.response);\n        };\n\n        xhr.onloadend = function () {\n          _this.reloading = false;\n          _this.xhr = null;\n        }; // Bust cache when there is a \"crossOrigin\" property to avoid browser cache error\n\n\n        if (options.checkCrossOrigin && isCrossOriginURL(url) && element.crossOrigin) {\n          url = addTimestamp(url);\n        }\n\n        xhr.open('GET', url);\n        xhr.responseType = 'arraybuffer';\n        xhr.withCredentials = element.crossOrigin === 'use-credentials';\n        xhr.send();\n      }\n    }, {\n      key: \"read\",\n      value: function read(arrayBuffer) {\n        var options = this.options,\n            imageData = this.imageData; // Reset the orientation value to its default value 1\n        // as some iOS browsers will render image with its orientation\n\n        var orientation = resetAndGetOrientation(arrayBuffer);\n        var rotate = 0;\n        var scaleX = 1;\n        var scaleY = 1;\n\n        if (orientation > 1) {\n          // Generate a new URL which has the default orientation value\n          this.url = arrayBufferToDataURL(arrayBuffer, MIME_TYPE_JPEG);\n\n          var _parseOrientation = parseOrientation(orientation);\n\n          rotate = _parseOrientation.rotate;\n          scaleX = _parseOrientation.scaleX;\n          scaleY = _parseOrientation.scaleY;\n        }\n\n        if (options.rotatable) {\n          imageData.rotate = rotate;\n        }\n\n        if (options.scalable) {\n          imageData.scaleX = scaleX;\n          imageData.scaleY = scaleY;\n        }\n\n        this.clone();\n      }\n    }, {\n      key: \"clone\",\n      value: function clone() {\n        var element = this.element,\n            url = this.url;\n        var crossOrigin;\n        var crossOriginUrl;\n\n        if (this.options.checkCrossOrigin && isCrossOriginURL(url)) {\n          crossOrigin = element.crossOrigin;\n\n          if (crossOrigin) {\n            crossOriginUrl = url;\n          } else {\n            crossOrigin = 'anonymous'; // Bust cache when there is not a \"crossOrigin\" property\n\n            crossOriginUrl = addTimestamp(url);\n          }\n        }\n\n        this.crossOrigin = crossOrigin;\n        this.crossOriginUrl = crossOriginUrl;\n        var image = document.createElement('img');\n\n        if (crossOrigin) {\n          image.crossOrigin = crossOrigin;\n        }\n\n        image.src = crossOriginUrl || url;\n        this.image = image;\n        image.onload = this.start.bind(this);\n        image.onerror = this.stop.bind(this);\n        addClass(image, CLASS_HIDE);\n        element.parentNode.insertBefore(image, element.nextSibling);\n      }\n    }, {\n      key: \"start\",\n      value: function start() {\n        var _this2 = this;\n\n        var image = this.isImg ? this.element : this.image;\n        image.onload = null;\n        image.onerror = null;\n        this.sizing = true;\n        var IS_SAFARI = WINDOW.navigator && /^(?:.(?!chrome|android))*safari/i.test(WINDOW.navigator.userAgent);\n\n        var done = function done(naturalWidth, naturalHeight) {\n          assign(_this2.imageData, {\n            naturalWidth: naturalWidth,\n            naturalHeight: naturalHeight,\n            aspectRatio: naturalWidth / naturalHeight\n          });\n          _this2.sizing = false;\n          _this2.sized = true;\n\n          _this2.build();\n        }; // Modern browsers (except Safari)\n\n\n        if (image.naturalWidth && !IS_SAFARI) {\n          done(image.naturalWidth, image.naturalHeight);\n          return;\n        }\n\n        var sizingImage = document.createElement('img');\n        var body = document.body || document.documentElement;\n        this.sizingImage = sizingImage;\n\n        sizingImage.onload = function () {\n          done(sizingImage.width, sizingImage.height);\n\n          if (!IS_SAFARI) {\n            body.removeChild(sizingImage);\n          }\n        };\n\n        sizingImage.src = image.src; // iOS Safari will convert the image automatically\n        // with its orientation once append it into DOM (#279)\n\n        if (!IS_SAFARI) {\n          sizingImage.style.cssText = 'left:0;' + 'max-height:none!important;' + 'max-width:none!important;' + 'min-height:0!important;' + 'min-width:0!important;' + 'opacity:0;' + 'position:absolute;' + 'top:0;' + 'z-index:-1;';\n          body.appendChild(sizingImage);\n        }\n      }\n    }, {\n      key: \"stop\",\n      value: function stop() {\n        var image = this.image;\n        image.onload = null;\n        image.onerror = null;\n        image.parentNode.removeChild(image);\n        this.image = null;\n      }\n    }, {\n      key: \"build\",\n      value: function build() {\n        if (!this.sized || this.ready) {\n          return;\n        }\n\n        var element = this.element,\n            options = this.options,\n            image = this.image; // Create cropper elements\n\n        var container = element.parentNode;\n        var template = document.createElement('div');\n        template.innerHTML = TEMPLATE;\n        var cropper = template.querySelector(\".\".concat(NAMESPACE, \"-container\"));\n        var canvas = cropper.querySelector(\".\".concat(NAMESPACE, \"-canvas\"));\n        var dragBox = cropper.querySelector(\".\".concat(NAMESPACE, \"-drag-box\"));\n        var cropBox = cropper.querySelector(\".\".concat(NAMESPACE, \"-crop-box\"));\n        var face = cropBox.querySelector(\".\".concat(NAMESPACE, \"-face\"));\n        this.container = container;\n        this.cropper = cropper;\n        this.canvas = canvas;\n        this.dragBox = dragBox;\n        this.cropBox = cropBox;\n        this.viewBox = cropper.querySelector(\".\".concat(NAMESPACE, \"-view-box\"));\n        this.face = face;\n        canvas.appendChild(image); // Hide the original image\n\n        addClass(element, CLASS_HIDDEN); // Inserts the cropper after to the current image\n\n        container.insertBefore(cropper, element.nextSibling); // Show the image if is hidden\n\n        if (!this.isImg) {\n          removeClass(image, CLASS_HIDE);\n        }\n\n        this.initPreview();\n        this.bind();\n        options.initialAspectRatio = Math.max(0, options.initialAspectRatio) || NaN;\n        options.aspectRatio = Math.max(0, options.aspectRatio) || NaN;\n        options.viewMode = Math.max(0, Math.min(3, Math.round(options.viewMode))) || 0;\n        addClass(cropBox, CLASS_HIDDEN);\n\n        if (!options.guides) {\n          addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-dashed\")), CLASS_HIDDEN);\n        }\n\n        if (!options.center) {\n          addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-center\")), CLASS_HIDDEN);\n        }\n\n        if (options.background) {\n          addClass(cropper, \"\".concat(NAMESPACE, \"-bg\"));\n        }\n\n        if (!options.highlight) {\n          addClass(face, CLASS_INVISIBLE);\n        }\n\n        if (options.cropBoxMovable) {\n          addClass(face, CLASS_MOVE);\n          setData(face, DATA_ACTION, ACTION_ALL);\n        }\n\n        if (!options.cropBoxResizable) {\n          addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-line\")), CLASS_HIDDEN);\n          addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-point\")), CLASS_HIDDEN);\n        }\n\n        this.render();\n        this.ready = true;\n        this.setDragMode(options.dragMode);\n\n        if (options.autoCrop) {\n          this.crop();\n        }\n\n        this.setData(options.data);\n\n        if (isFunction(options.ready)) {\n          addListener(element, EVENT_READY, options.ready, {\n            once: true\n          });\n        }\n\n        dispatchEvent(element, EVENT_READY);\n      }\n    }, {\n      key: \"unbuild\",\n      value: function unbuild() {\n        if (!this.ready) {\n          return;\n        }\n\n        this.ready = false;\n        this.unbind();\n        this.resetPreview();\n        this.cropper.parentNode.removeChild(this.cropper);\n        removeClass(this.element, CLASS_HIDDEN);\n      }\n    }, {\n      key: \"uncreate\",\n      value: function uncreate() {\n        if (this.ready) {\n          this.unbuild();\n          this.ready = false;\n          this.cropped = false;\n        } else if (this.sizing) {\n          this.sizingImage.onload = null;\n          this.sizing = false;\n          this.sized = false;\n        } else if (this.reloading) {\n          this.xhr.onabort = null;\n          this.xhr.abort();\n        } else if (this.image) {\n          this.stop();\n        }\n      }\n      /**\n       * Get the no conflict cropper class.\n       * @returns {Cropper} The cropper class.\n       */\n\n    }], [{\n      key: \"noConflict\",\n      value: function noConflict() {\n        window.Cropper = AnotherCropper;\n        return Cropper;\n      }\n      /**\n       * Change the default options.\n       * @param {Object} options - The new default options.\n       */\n\n    }, {\n      key: \"setDefaults\",\n      value: function setDefaults(options) {\n        assign(DEFAULTS, isPlainObject(options) && options);\n      }\n    }]);\n\n    return Cropper;\n  }();\n\n  assign(Cropper.prototype, render, preview, events, handlers, change, methods);\n\n  return Cropper;\n\n}));\n"],"sourceRoot":""}